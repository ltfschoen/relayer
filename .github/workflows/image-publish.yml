name: Container Image Release

on:
  push:
    # Publish `develop` as Container `edge` image.
    branches:
      - develop
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: relayer
  DEV_PACKAGES: build-essential musl musl-dev musl-tools libssl-dev pkg-config

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      packages: write
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-push
      cancel-in-progress: true
    steps:
      - name: install system build dependencies
        run: sudo apt-get update && sudo apt-get install ${DEV_PACKAGES}
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust"

      - run: ci/set_rust_version.bash stable x86_64-unknown-linux-musl
      - run: ci/build.bash cargo x86_64-unknown-linux-musl RELEASE DOCKER

      - name: Build Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `edge` tag convention
          [ "$VERSION" == "develop" ] && VERSION=edge

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

