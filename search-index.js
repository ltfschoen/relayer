var searchIndex = JSON.parse('{\
"webb_block_poller":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLFLLLLLLL","n":["BlockWatcher","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","start_block_poller_service","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"webb_block_poller"]],"d":["A struct for listening to blocks / block headers that ‚Ä¶","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","Start the block poller service which polls ETH blocks","","","","","","",""],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3],"f":[0,[1],[[],2],[[],2],[[]],[[]],[3,3],[[]],[[],3],[4],[4],[4],[[3,5],6],[[]],[[]],[[]],[[]],[[],4],[[]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[[11,12,[9,[13]],[9,[14]],15],16],[[]],[[],17],[[],17],[[],18],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"BlockWatcher"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"RelayerContext"],[3,"U256"],[6,"Client"],[6,"Store"],[3,"BlockPollerConfig"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"webb_bridge_registry_backends":{"doc":"Relayer Bridge Registry Backends üï∏Ô∏è","t":"IKLKK","n":["BridgeRegistryBackend","bridges","config_or_dkg_bridges","next_bridge_index","resource_to_bridge_index"],"q":[[0,"webb_bridge_registry_backends"]],"d":["Wrapper for calling DKG bridge registry pallet methods.","Returns bridge with the given index, if any.","Attempts to return other linked anchors from the same ‚Ä¶","Returns the next available bridge index. In other words, ‚Ä¶","Retrieves the bridge index which a given resource is ‚Ä¶"],"i":[0,7,7,7,7],"f":[0,[1,[[4,[[3,[2]]]]]],[[5,6],[[4,[[3,[2]]]]]],[[],[[4,[[3,[2]]]]]],[6,[[4,[[3,[2]]]]]]],"c":[],"p":[[15,"u32"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Option"],[3,"ResourceId"],[8,"BridgeRegistryBackend"]]},\
"webb_chains_info":{"doc":"Webb Chains Information","t":"FF","n":["chain_info_by_chain_id","chains_info"],"q":[[0,"webb_chains_info"]],"d":["Get the chain information by the chain identifier.","Get the chains information."],"i":[0,0],"f":[[1,[[2,[0]]]],[[]]],"c":[],"p":[[15,"u64"],[4,"Option"]]},\
"webb_circom_proving":{"doc":"","t":"NEDNNLLLLFFLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMM","n":["CircuitKeyError","ProofError","ProverPath","SynthesisError","WitnessError","borrow","borrow","borrow_mut","borrow_mut","circom_from_folder","circom_from_raw","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","generate_proof","header","header","in_current_span","in_current_span","init","init","into","into","new","pointer_metadata","pointer_metadata","provide","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","verify_proof","vzip","vzip","wasm","zkey"],"q":[[0,"webb_circom_proving"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Verifies a given proof","","","",""],"i":[10,0,0,10,10,10,5,10,5,0,0,5,5,10,5,10,5,10,5,5,10,5,10,10,5,10,10,10,5,0,10,10,10,10,10,5,10,5,5,10,5,10,5,10,5,10,10,5,10,5,10,5,10,5,10,5,10,5,0,10,5,5,5],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[1,2],[[[4,[3]]],2],[5,5],[[]],[6],[6],[6],[6],[[],[[8,[7]]]],[9,[[8,[5]]]],[[],[[8,[7]]]],[6],[6],[[10,11],12],[[10,11],12],[[5,11],12],[[]],[13,10],[14,10],[[]],[2,[[8,[10]]]],[[[0,[15,16,17]]],[[18,[[0,[15,16,17]]]]]],[[[0,[15,16,17]]],[[19,[[0,[15,16,17]]]]]],[[]],[[]],[[],6],[[],6],[[]],[[]],[[20,20],5],[[]],[[]],[21],[[5,22],8],[10,[[24,[23]]]],[[]],[[],20],[[],8],[[],8],[[],8],[[],8],[[],25],[[],25],[[[27,[26]]],[[27,[28,26]]]],[[[27,[26]]],[[27,[28,26]]]],[[],28],[[],28],[[],28],[[],28],[[29,30,[4,[31]]],[[8,[32,10]]]],[[]],[[]],0,0],"c":[],"p":[[15,"str"],[3,"Mutex"],[15,"u8"],[3,"Vec"],[3,"ProverPath"],[15,"usize"],[3,"With"],[4,"Result"],[8,"Deserializer"],[4,"ProofError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"SynthesisError"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"IndentedSection"],[3,"String"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[4,"Option"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"VerifyingKey"],[3,"Proof"],[6,"Fr"],[15,"bool"]]},\
"webb_event_watcher_traits":{"doc":"Relayer Events Watcher Module üï∏Ô∏è","t":"AAIQQGGIGIIQQQQSIKKKKLLKKKLLLLGQIGISQQIISKKKLLLLLL","n":["evm","substrate","BridgeWatcher","Contract","Contract","EthersClient","EthersTimeLagClient","EventHandler","EventHandlerFor","EventHandlerWithRetry","EventWatcher","Events","Events","Store","Store","TAG","WatchableContract","can_handle_events","deployed_at","handle_cmd","handle_event","handle_event_with_retry","handle_event_with_retry","max_blocks_per_step","polling_interval","print_progress_interval","run","run","run","run","BlockNumberOf","Client","EventHandler","EventHandlerFor","EventHandlerWithRetry","PALLET_NAME","Store","Store","SubstrateBridgeWatcher","SubstrateEventWatcher","TAG","can_handle_events","handle_cmd","handle_events","handle_events_with_retry","handle_events_with_retry","run","run","run","run"],"q":[[0,"webb_event_watcher_traits"],[2,"webb_event_watcher_traits::evm"],[30,"webb_event_watcher_traits::substrate"]],"d":["EVM Events Watcher Traits üï∏Ô∏è","Substrate Events Watcher Traits üï∏Ô∏è","A Bridge Watcher is a trait for Bridge contracts that not ‚Ä¶","The contract that this event watcher is watching.","The Type of contract this handler is for, Must be the same ‚Ä¶","Ethereum client using Ethers, that includes a retry ‚Ä¶","Ethereum TimeLag client using Ethers, that includes a ‚Ä¶","A trait that defines a handler for a specific set of event ‚Ä¶","A helper type to extract the <code>EventHandler</code> from the ‚Ä¶","An Auxiliary trait to handle events with retry logic.","A trait for watching events from a watchable contract. ‚Ä¶","The Events that this event watcher is interested in.","The type of event this handler is for.","The Storage backend that will be used to store the ‚Ä¶","The storage backend that this handler will use.","A Helper tag used to identify the event watcher during the ‚Ä¶","A watchable contract is a contract used in the EventWatcher","Whether any of the events could be handled by the handler","The block number where this contract is deployed.","A method to be called with the <code>BridgeCommand</code> information to","a method to be called with the event information, it is up ‚Ä¶","A method to be called with the event information, it is up ‚Ä¶","A method to be called with the event information, it is up ‚Ä¶","How many events to fetch at one request.","How often this contract should be polled for events.","The frequency of printing the sync progress.","Returns a task that should be running in the background ‚Ä¶","Returns a task that should be running in the background ‚Ä¶","Returns a task that should be running in the background ‚Ä¶","Returns a task that should be running in the background ‚Ä¶","Type alias for Substrate block number.","The Runtime Client that can be used to perform API calls.","A trait that defines a handler for a specific set of event ‚Ä¶","A type alias to extract the event handler type from the ‚Ä¶","An Auxiliary trait to handle events with retry logic.","The name of the pallet that this event watcher is watching.","The Storage backend, used by the event handler to store ‚Ä¶","The Storage backend, used by the event watcher to store ‚Ä¶","instead it watches for commands sent from other event ‚Ä¶","Represents a Substrate event watcher.","A helper unique tag to help identify the event watcher in ‚Ä¶","Whether any of the events could be handled by the handler","A method that is called when a command is received that ‚Ä¶","a method to be called with a list of events information, ‚Ä¶","A method to be called with the list of events information, ‚Ä¶","A method to be called with the list of events information, ‚Ä¶","Returns a task that should be running in the background ‚Ä¶","Returns a task that should be running in the background ‚Ä¶","Returns a task that should be running in the background ‚Ä¶","Returns a task that should be running in the background ‚Ä¶"],"i":[0,0,0,23,24,0,0,0,0,0,0,23,24,23,24,23,0,24,25,26,24,27,27,25,25,25,23,23,26,26,0,28,0,0,0,29,28,29,0,0,29,28,30,28,31,31,29,29,30,30],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[[2,[1]]]]]],[[],4],[[5,6],[[3,[[2,[1]]]]]],[[5,[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[5,[0,[9,10,11]],[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[5,[0,[9,10,11]],[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[],4],[[],12],[[],12],[[[5,[13]],5,[15,[[14,[11]]]],16],[[3,[[2,[1]]]]]],[[[5,[13]],5,[15,[[14,[11]]]],16],[[3,[[2,[1]]]]]],[[[5,[13]],5,[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[[5,[13]],5,[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],0,0,0,0,0,0,0,0,0,0,0,[17,[[3,[[2,[1]]]]]],[[18,5,[5,[19]],20,6],[[3,[[2,[1]]]]]],[[5,5,[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[5,5,[0,[9,10,11]],[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[5,5,[0,[9,10,11]],[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[18,16,5,21,[15,[[22,[11]]]],[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[18,16,5,21,[15,[[22,[11]]]],[5,[[8,[7]]]]],[[3,[[2,[1]]]]]],[[18,16,20,5],[[3,[[2,[1]]]]]],[[18,16,20,5],[[3,[[2,[1]]]]]]],"c":[],"p":[[8,"Future"],[3,"Box"],[3,"Pin"],[3,"U64"],[3,"Arc"],[4,"BridgeCommand"],[3,"Metrics"],[3,"Mutex"],[8,"Backoff"],[8,"Send"],[8,"Sync"],[3,"Duration"],[6,"EthersTimeLagClient"],[6,"EventHandlerFor"],[3,"Vec"],[3,"RelayerContext"],[3,"Events"],[15,"u32"],[3,"OnlineClient"],[3,"Pair"],[3,"EventsWatcherConfig"],[6,"EventHandlerFor"],[8,"EventWatcher"],[8,"EventHandler"],[8,"WatchableContract"],[8,"BridgeWatcher"],[8,"EventHandlerWithRetry"],[8,"EventHandler"],[8,"SubstrateEventWatcher"],[8,"SubstrateBridgeWatcher"],[8,"EventHandlerWithRetry"]]},\
"webb_ew_dkg":{"doc":"","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DKGMetadataWatcher","DKGProposalHandlerWatcher","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"webb_ew_dkg"]],"d":["The DKGMetadataWatcher watches for the events from Dkg ‚Ä¶","The DKGProposalHandlerWatcher watches for the events from ‚Ä¶","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4],"f":[0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[[],3],[[],4],[5],[5],[5],[5],[5],[5],[[3,6],7],[[4,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[[9,[8]]],[[9,[2,8]]]],[[[9,[8]]],[[9,[2,8]]]],[10,[[10,[2]]]],[10,[[10,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"DKGMetadataWatcher"],[3,"DKGProposalHandlerWatcher"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"]]},\
"webb_ew_evm":{"doc":"","t":"DDDLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AnchorContractWatcher","VAnchorContractWatcher","VAnchorContractWrapper","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","config","contract","default","default","deployed_at","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_blocks_per_step","new","polling_interval","print_progress_interval","signature_bridge_watcher","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","webb_config","SignatureBridgeContractWatcher","SignatureBridgeContractWrapper","SignatureBridgeGovernanceOwnershipTransferredHandler","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_handle_events","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deployed_at","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle_cmd","handle_event","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","max_blocks_per_step","new","polling_interval","print_progress_interval","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip"],"q":[[0,"webb_ew_evm"],[96,"webb_ew_evm::signature_bridge_watcher"]],"d":["An Anchor Contract Watcher that watches for the Anchor ‚Ä¶","An VAnchor Contract Watcher that watches for the Anchor ‚Ä¶","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Creates a new VAnchorContractOverDKGWrapper.","","","","","","","","","","","","","","","","","","","","","","","","","","A SignatureBridge contract events &amp; commands watcher.","A Wrapper around the <code>SignatureBridgeContract</code> contract.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,5,6,7,5,5,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,5,6,6,7,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,5,5,5,0,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,6,7,5,0,0,0,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22,22,25,26,22,25,26,22,26,22,25,25,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22,25,25,26,26,22,22,26,22,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22,25,25,25,25,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22,25,26,22],"f":[0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[6,6],[7,7],[[]],[[]],[[]],0,0,[[],6],[[],7],[[[5,[3]]],8],[9],[[[5,[3]]]],[9],[9],[9],[9],[9],[9],[9],[9],[[[5,[[0,[3,10]]]],11],12],[[6,11],12],[[7,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[[5,[3]]],8],[[17,18,[15,[3]]],[[5,[3]]]],[[[5,[3]]],19],[[[5,[3]]],19],0,[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[24,[[14,[23]]]]]],[[[25,[3]]],[[25,[3]]]],[26,26],[22,22],[[]],[[]],[[]],[[],26],[[],22],[[[25,[3]]],8],[[[25,[3]]]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[[25,[[0,[10,3]]]],11],12],[[26,11],12],[[22,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,15,27],[[24,[[14,[23]]]]]],[[22,15,[15,[[29,[28]]]]],[[24,[[14,[23]]]]]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[[25,[3]]],8],[[30,[15,[3]]],[[25,[3]]]],[[[25,[3]]],19],[[[25,[3]]],19],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[8,"Middleware"],[8,"Clone"],[3,"VAnchorContractWrapper"],[3,"AnchorContractWatcher"],[3,"VAnchorContractWatcher"],[3,"U64"],[15,"usize"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"VAnchorContractConfig"],[3,"WebbRelayerConfig"],[3,"Duration"],[4,"Result"],[3,"TypeId"],[3,"SignatureBridgeGovernanceOwnershipTransferredHandler"],[8,"Future"],[3,"Pin"],[3,"SignatureBridgeContractWrapper"],[3,"SignatureBridgeContractWatcher"],[4,"BridgeCommand"],[3,"Metrics"],[3,"Mutex"],[3,"SignatureBridgeContractConfig"]]},\
"webb_ew_substrate":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["SubstrateVAnchorEventWatcher","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"webb_ew_substrate"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[0,[1],[[],2],[[],2],[[]],[[]],[3,3],[[]],[[],3],[4],[4],[4],[[3,5],6],[[]],[[]],[[]],[[]],[[],4],[[]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[[]],[[],11],[[],11],[[],12],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"SubstrateVAnchorEventWatcher"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Result"],[3,"TypeId"]]},\
"webb_light_client_relayer":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLFLLLLLLL","n":["LightClientWatcher","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","start_light_client_service","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"webb_light_client_relayer"]],"d":["A struct for listening to blocks / block headers that ‚Ä¶","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","Start the block poller service which polls ETH blocks","","","","","","",""],"i":[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3],"f":[0,[1],[[],2],[[],2],[[]],[[]],[3,3],[[]],[[],3],[4],[4],[4],[[3,5],6],[[]],[[]],[[]],[[]],[[],4],[[]],[[[8,[7]]],[[8,[2,7]]]],[9,[[9,[2]]]],[10,[[10,[2]]]],[[11,12],13],[[]],[[],14],[[],14],[[],15],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"LightClientWatcher"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"RelayerContext"],[3,"Config"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"webb_price_oracle_backends":{"doc":"Price Oracle Backends","t":"DDDNENIDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CachedPriceBackend","CoinGeckoBackend","DummyPriceBackend","EUR","FiatCurrency","GBP","PriceBackend","PriceOracleMerger","USD","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","builder","cache_expiration","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_prices","get_prices_vs_currency","get_prices_vs_currency","get_prices_vs_currency","get_prices_vs_currency","get_prices_vs_currency","init","init","init","init","init","inner","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_clear","merge","new","store","symbol","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","use_cache_if_source_unavailable_enabled","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"webb_price_oracle_backends"]],"d":["A price backend that caches the price data in a local ‚Ä¶","A backend for fetching prices from <code>CoinGecko</code>","A Dummy Price Oracle Backend","Euro","A List of supported fiat currencies","British Pound","A trait for a price backend","A Price Oracle Merger backend is a backend that builds on ‚Ä¶","United States Dollar","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>PriceOracleMergerBuilder</code>","Create a builder for building <code>CachedPriceBackend</code>. On the ‚Ä¶","Create a builder for building <code>CoinGeckoBackend</code>. On the ‚Ä¶","Returns the cache expiration duration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Returns the prices for the given tokens in the USD currency","Returns the prices for the given tokens in the requested ‚Ä¶","","","","","","","","","","Returns the inner price backend","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Merges the price data from the underlying backends","Creates a new dummy price backend","Returns the inner data store The data store is used for ‚Ä¶","Returns the currency symbol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the cache should be returned even if the ‚Ä¶","","","","",""],"i":[0,0,0,11,0,11,0,0,11,5,9,10,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,20,5,9,5,11,5,9,10,11,5,9,10,11,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,11,11,11,5,9,10,11,11,20,5,9,10,11,20,5,9,10,11,20,5,5,9,9,10,10,11,11,3,3,20,5,9,10,20,5,9,10,11,5,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,11,20,10,5,11,5,9,10,11,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,20,5,9,10,11,5,20,5,9,10,11],"f":[0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[5,[3,[4,[0]]]]],[[7,[6]]]],[[]],[[[5,[8,8]]],[[5,[8,8]]]],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[],11],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[11,11],13],[[],13],[[],13],[[[5,[14,14]],15],16],[[9,15],16],[[10,15],16],[[11,15],16],[[11,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[19,[[18,[17]]]]]],[11,[[19,[[18,[17]]]]]],[[20,11],[[19,[[18,[17]]]]]],[[[5,[[0,[3,8]],[0,[[4,[0]],8,21,22]]]],11],[[19,[[18,[17]]]]]],[[9,11],[[19,[[18,[17]]]]]],[[10,11],[[19,[[18,[17]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[[5,[3,[4,[0]]]]]],[[]],[[]],[[]],[[]],[[]],[[[18,[23]]],[[18,[2,23]]]],[[[18,[23]]],[[18,[2,23]]]],[[[18,[23]]],[[18,[2,23]]]],[[[18,[23]]],[[18,[2,23]]]],[[[18,[23]]],[[18,[2,23]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[24,[[24,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[25,[[25,[2]]]],[[],13],[[20,[18,[3]]],20],[[[28,[26,27]]],10],[[[5,[3,[4,[0]]]]]],[11,29],[[]],[[]],[[]],[[]],[[],26],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[3,[4,[0]]]]],13],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[8,"PriceBackend"],[8,"TokenPriceCacheStore"],[3,"CachedPriceBackend"],[3,"Duration"],[4,"Option"],[8,"Clone"],[3,"CoinGeckoBackend"],[3,"DummyPriceBackend"],[4,"FiatCurrency"],[15,"usize"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"PriceOracleMerger"],[8,"Send"],[8,"Sync"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"String"],[15,"f64"],[3,"HashMap"],[15,"str"],[4,"Result"],[3,"TypeId"]]},\
"webb_proof_generation":{"doc":"","t":"AAADDMLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLMMDDDDDDDMMMMMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMMMMLLLLLLLLMMMMMLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMNDNEMMMLLLLMLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLLMMMMMMMLLMLLMMMMMMMMMLLMMMMLLMLLLLLLLLLLLLLLM","n":["batch_prover","proof_delegation","types","BatchProofInput","MaspBatchProver","args_hash","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","from","from","gen_proof","init","init","into","into","leaves","new","new_root","old_root","path_elements","path_indices","pointer_metadata","pointer_metadata","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","wc","zkey","MaspAssetInfo","MaspDelegatedProofInput","MaspDelegatedProver","MaspInUtxo","MaspOutUtxo","MaspSignature","Point","amount","amount","asset","asset_id","auth_key","blinding","blinding","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitment","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","ext_data_hash","fee_asset","fee_auth_key","fee_in_signature","fee_in_utxos","fee_out_signature","fee_out_utxos","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_json","from_str_values","from_str_values","from_str_values","from_str_values","from_str_values","gen_proof","in_signature","in_utxos","init","init","init","init","init","init","init","into","into","into","into","into","into","into","new","nullifier","out_signature","out_utxos","path_elements","path_indices","pk","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","pointer_metadata","preprocess","public_amount","public_asset","r8x","r8y","roots","serialize","serialize","serialize","serialize","serialize","serialize","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","upcast_any_ref","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wc","whitelisted_asset_ids","x","y","zkey","JsonDecodeError","MaspDelegatedProofInputsJson","ParseBigIntError","ProofGenerationError","ak_x","ak_y","asset_id","borrow","borrow","borrow_mut","borrow_mut","chain_id","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","ext_data_hash","fee_ak_x","fee_ak_y","fee_asset_id","fee_in_amount","fee_in_blinding","fee_in_path_elements","fee_in_path_indices","fee_in_r8x","fee_in_r8y","fee_in_signature","fee_input_nullifier","fee_out_amount","fee_out_blinding","fee_out_chain_id","fee_out_pk_x","fee_out_pk_y","fee_out_r8x","fee_out_r8y","fee_out_signature","fee_output_commitment","fee_token_id","fmt","from","from","in_amount","in_blinding","in_path_elements","in_path_indices","in_r8x","in_r8y","in_signature","init","init","input_nullifier","into","into","out_amount","out_blinding","out_chain_id","out_pk_x","out_pk_y","out_r8x","out_r8y","out_signature","output_commitment","pointer_metadata","pointer_metadata","public_amount","public_asset_id","public_token_id","roots","serialize","to_owned","token_id","try_from","try_from","try_into","try_into","type_id","type_id","upcast_any_box","upcast_any_box","upcast_any_mut","upcast_any_mut","upcast_any_ref","upcast_any_ref","vzip","vzip","whitelisted_asset_ids"],"q":[[0,"webb_proof_generation"],[3,"webb_proof_generation::batch_prover"],[49,"webb_proof_generation::proof_delegation"],[267,"webb_proof_generation::types"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Proof data object for Masp proof delegation. This include ‚Ä¶","","","","","","The amount of the utxo","amount of the utxo","","","","The blinding of the utxo","blinding of the utxo","","","","","","","","","","","","","","","chain_id of the utxo","Chain ID of the transaction","","","","","","","","","","","","","","","Commitment of the utxo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ext data hash of transaction","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The nullifier of the utxo","","","Path elements for utxo","Path indices for utxo","public key ((x, y) values) of the utxo","","","","","","","","","Public amount of transaction","","","","roots for membership check on MASP","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proof data object for Masp proof delegation. This include ‚Ä¶","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,4,5,4,5,4,5,4,5,5,5,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,4,4,0,0,0,0,0,0,0,13,15,17,12,17,13,15,12,13,14,15,16,17,18,12,13,14,15,16,17,18,15,17,12,13,14,15,16,17,18,12,13,14,15,16,17,18,15,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,12,13,13,14,14,15,15,16,16,17,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,17,17,17,17,17,17,17,12,13,14,15,16,17,18,12,13,14,15,16,17,18,17,12,13,14,15,16,18,17,17,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,13,17,17,13,13,15,12,13,14,15,16,17,18,17,17,17,14,14,17,12,13,14,15,16,17,14,12,13,14,15,16,17,18,12,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,12,13,14,15,16,17,18,18,17,16,16,18,29,0,29,0,28,28,28,29,28,29,28,28,28,28,29,28,29,28,29,28,28,29,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,28,28,28,28,28,28,28,28,29,28,28,29,28,28,28,28,28,28,28,28,28,28,29,28,28,28,28,28,28,28,28,29,28,29,28,29,28,29,28,29,28,29,28,29,28,28],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],[[]],[[]],[[4,5],[[3,[6]]]],[[],1],[[],1],[[]],[[]],0,[7,4],0,0,0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[19,[[3,[12]]]],[[],[[3,[2]]]],[19,[[3,[13]]]],[[],[[3,[2]]]],[19,[[3,[14]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[19,[[3,[15]]]],[19,[[3,[16]]]],[[],[[3,[2]]]],[19,[[3,[17]]]],[[],[[3,[2]]]],[[],[[3,[2]]]],[1],[1],[1],[1],[1],[1],[1],[[12,12],20],[[13,13],20],[[14,14],20],[[15,15],20],[[16,16],20],[[17,17],20],0,0,0,0,0,0,0,[[12,21],22],[[13,21],22],[[14,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[18,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[3,[17,24]]]],[[23,23],[[3,[12,24]]]],[[23,23,23,23,[26,[25]]],[[3,[13,24]]]],[[23,23,23],[[3,[14,24]]]],[[23,23,23,23,23,23],[[3,[15,24]]]],[[23,23],[[3,[16,24]]]],[[18,17],[[3,[6]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,18],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17],0,0,0,0,0,[[12,27],3],[[13,27],3],[[14,27],3],[[15,27],3],[[16,27],3],[[17,27],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[28,28],[[]],[1],[1],[1],[1],[[],[[3,[2]]]],[19,[[3,[28]]]],[[],[[3,[2]]]],[1],[1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[28,21],22],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],0,[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,[[28,27],3],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[[10,[9]]],[[10,[11,9]]]],[[[10,[9]]],[[10,[11,9]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],0],"c":[],"p":[[15,"usize"],[3,"With"],[4,"Result"],[3,"MaspBatchProver"],[3,"BatchProofInput"],[4,"ProofError"],[3,"ProverPath"],[3,"TypeId"],[3,"Global"],[3,"Box"],[8,"Any"],[3,"MaspAssetInfo"],[3,"MaspInUtxo"],[3,"MaspSignature"],[3,"MaspOutUtxo"],[3,"Point"],[3,"MaspDelegatedProofInput"],[3,"MaspDelegatedProver"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"ParseBigIntError"],[3,"String"],[3,"Vec"],[8,"Serializer"],[3,"MaspDelegatedProofInputsJson"],[4,"ProofGenerationError"]]},\
"webb_proposal_signing_backends":{"doc":"Relayer Proposal Signing Backends üï∏Ô∏è","t":"IKKAQIIIDDLLLLLLLLLLKLLLLLKLLLLLLKKLLLLLLLLLLKLLLLLLLLLLLLLKAKLKLALKFLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRRRIDRLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ProposalSigningBackend","can_handle_proposal","handle_proposal","queue","Proposal","ProposalHash","ProposalMetadata","ProposalsQueue","QueuedAnchorUpdateProposal","QueuedProposalMetadata","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","dequeue","deref","deref","deref_mut","deref_mut","drop","drop","enqueue","find","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","full_hash","full_hash","header","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_empty","len","mem","metadata","metadata","modify_in_place","new","policy","queued_at","retain","run","set_should_be_dequeued_at","should_be_dequeued_at","to_owned","to_owned","to_vec","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","InMemoryProposalsQueue","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clear","clone","clone_into","default","dequeue","deref","deref_mut","drop","enqueue","find","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","is_empty","len","modify_in_place","new","retain","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","AlwaysHigherNoncePolicy","INITIAL_DELAY","MAX_DELAY","MIN_DELAY","ProposalPolicy","TimeDelayPolicy","WINDOW_SIZE","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","builder","check","check","check","clone","clone","clone_into","clone_into","default","delay","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","max_delay","min_delay","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","update_delay","vzip","vzip"],"q":[[0,"webb_proposal_signing_backends"],[4,"webb_proposal_signing_backends::queue"],[86,"webb_proposal_signing_backends::queue::mem"],[124,"webb_proposal_signing_backends::queue::policy"]],"d":["A Proposal Signing Backend is responsible for signing ‚Ä¶","A method to be called first to check if this backend can ‚Ä¶","Send the Unsigned Proposal to the backend to start ‚Ä¶","A module to handle the queue of proposals","The proposal type associated with the Proposal Queue.","A small trait to add more functionality to the ‚Ä¶","The <code>ProposalMetadata</code> trait is implemented by proposals ‚Ä¶","A Proposal Queue is a simple Queue that holds the ‚Ä¶","A Small Wrapper around a proposal that adds some metadata.","Associated metadata for a queued proposal.","","","","","","","","","","","Clears the proposal queue, removing all proposals.","","","","","","Dequeues a proposal from the queue with the specified ‚Ä¶","","","","","","","Enqueues a proposal into the queue with the specified ‚Ä¶","Finds and returns a proposal that satisfies the given ‚Ä¶","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Returns the hash of the full proposal. The full proposal ‚Ä¶","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns <code>true</code> if the proposal queue is empty.","Returns the length of the proposal queue.","A module for in-memory Proposals Queue.","Returns a reference to the metadata of the proposal.","","Modifies a proposal in place using the provided closure.","Creates a new <code>QueuedAnchorUpdateProposal</code> from a proposal. ‚Ä¶","A module for Proposals Polices.","Get the time at which the proposal was enqueued. The value ‚Ä¶","Retains only the proposals in the queue that satisfy the ‚Ä¶","Runs the queue in a loop that it will try to dequeue ‚Ä¶","Set the time at which the proposal should be dequeued. The ‚Ä¶","Get the time at which the proposal should be dequeued. The ‚Ä¶","","","","","","","","","","","","","","","","In memory implementation of the proposals queue.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","Creates a new <code>InMemoryProposalsQueue</code> that will store the ‚Ä¶","","","","","","","","","A policy that always checks if the nonce of a proposal is ‚Ä¶","Initial delay in seconds","Maximum delay in seconds","Minimum delay in seconds","The <code>ProposalPolicy</code> trait defines the behavior of a policy ‚Ä¶","A policy for introducing time delays based on a sliding ‚Ä¶","Sliding window size","","","","","","","","","","","Create a builder for building <code>TimeDelayPolicy</code>. On the ‚Ä¶","Checks whether a proposal should be accepted or rejected ‚Ä¶","","","","","","","","Returns the current delay as a <code>Duration</code>","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the maximum delay as a <code>Duration</code>","Returns the minimum delay as a <code>Duration</code>","","","","","","","","","","","","","Updates the current delay based on the average delay ‚Ä¶","",""],"i":[0,28,28,0,26,0,0,0,0,0,10,11,10,11,10,11,10,11,10,11,26,10,11,10,11,10,26,10,11,10,11,10,11,26,26,10,11,10,11,10,11,10,10,11,11,37,11,11,10,11,10,11,10,11,10,11,10,11,26,26,0,38,11,26,11,0,10,26,0,10,10,10,11,11,10,11,10,11,10,11,10,11,10,11,10,11,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,0,0,0,0,0,34,35,34,35,34,35,34,35,34,35,35,12,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,34,35,35,34,35,34,35,34,35,34,35,34,35,35,35,34,35,34,35,34,35,34,35,34,35,34,35,35,34,35],"f":[0,[[],[[3,[[2,[1]]]]]],[[[6,[[5,[4]]]]],[[3,[[2,[1]]]]]],0,0,0,0,0,0,0,[7],[7],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[],9],[10,10],[11,11],[[]],[[]],[[],10],[12,[[9,[13]]]],[14],[14],[14],[14],[14],[14],[12,9],[15,[[9,[13]]]],[[10,16],17],[[11,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,18],[[],14],[[],14],[[]],[[]],[[[2,[19]]],[[2,[8,19]]]],[[[2,[19]]],[[2,[8,19]]]],[6,[[6,[8]]]],[6,[[6,[8]]]],[20,[[20,[8]]]],[20,[[20,[8]]]],[[],[[9,[21]]]],[[],[[9,[14]]]],0,[[],10],[11,10],[15,9],[[[0,[22,23,24]]],11],0,[10,25],[15,9],[[26,[0,[12,27]],28,[6,[[5,[4]]]]]],[[10,25]],[10,[[13,[25]]]],[[]],[[]],[11,[[30,[29]]]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],0,[7],[[],8],[[],8],[[]],[[]],[33,9],[33,33],[[]],[[],33],[[33,12],[[9,[13]]]],[14],[14],[14],[[33,12],9],[[33,15],[[9,[13]]]],[[33,16],17],[[]],[[]],[[]],[[]],[[],14],[[]],[[[2,[19]]],[[2,[8,19]]]],[6,[[6,[8]]]],[20,[[20,[8]]]],[33,[[9,[21]]]],[33,[[9,[14]]]],[[33,15],9],[[],33],[[33,15],9],[[]],[[],31],[[],31],[[],32],[[]],[[]],[[]],0,0,0,0,0,0,0,[7],[7],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],0,[[],9],[34,9],[35,9],[34,34],[35,35],[[]],[[]],[[],34],[35,36],[14],[14],[14],[14],[14],[14],[[34,16],17],[[35,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[]],[[]],[[[2,[19]]],[[2,[8,19]]]],[[[2,[19]]],[[2,[8,19]]]],[6,[[6,[8]]]],[6,[[6,[8]]]],[20,[[20,[8]]]],[20,[[20,[8]]]],[35,36],[35,36],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[]],[[]],[[]],[[]],[[35,14],[[9,[21]]]],[[]],[[]]],"c":[],"p":[[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Metrics"],[3,"Mutex"],[3,"Arc"],[3,"Private"],[8,"Any"],[6,"Result"],[3,"QueuedProposalMetadata"],[3,"QueuedAnchorUpdateProposal"],[8,"ProposalPolicy"],[4,"Option"],[15,"usize"],[8,"FnMut"],[3,"Formatter"],[6,"Result"],[3,"ProposalHeader"],[3,"Global"],[3,"Rc"],[15,"bool"],[8,"ProposalTrait"],[8,"Send"],[8,"Sync"],[15,"u64"],[8,"ProposalsQueue"],[8,"Clone"],[8,"ProposalSigningBackend"],[15,"u8"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[3,"InMemoryProposalsQueue"],[3,"AlwaysHigherNoncePolicy"],[3,"TimeDelayPolicy"],[3,"Duration"],[8,"ProposalHash"],[8,"ProposalMetadata"]]},\
"webb_relayer":{"doc":"Webb Relayer Crate üï∏Ô∏è","t":"NNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLMMMMMNNNEGLLLLFLLLALLLFLLLLLFALLLLLLGGFFFFGFFFFFFF","n":["ArkworksError","Axum","BridgeNotFound","BridgeNotRegistered","ChainNotFound","Config","Conversion","ConvertLeafScalarError","EllipticCurve","Error","EtherWalletError","EthersContractCall","EthersContractCallWithRetry","EthersContractCallWithRetryCloneable","EthersContractCallWithSigner","EthersContractCallWithTimeLagRetryClient","EthersContractCallWithTimeLagRetryClientCloneable","EthersProvider","EthersTimelagRetryClientClonableError","EthersTimelagRetryClientError","Etherscan","EtherscanConfigNotFound","FailedToSendResponse","FetchTokenPriceError","ForceRestart","GasOracle","Generic","Glob","GlobPattern","Hyper","InvalidMerkleRootError","Io","Json","Metadata","MissingSecrets","MissingValidationDetails","NodeNotFound","ParseConfig","ParseFloatError","PrometheusError","ProviderNotFound","ReadSubstrateStorageError","Reqwest","RestartRelayer","Result","ScaleCodec","Secp256k1","Sled","SledTransaction","SubxtError","TaskStoppedAbnormally","Url","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","provide","service","source","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","chain_id","chain_id","chain_id","token","typed_chain_id","Dkg","Mocked","None","ProposalSigningBackendSelector","Store","as_any","as_any_mut","borrow","borrow_mut","build_web_services","deref","deref_mut","drop","evm","from","from_mut","from_ref","ignite","init","into","into_any","into_any_arc","into_any_rc","make_proposal_signing_backend","substrate","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Client","TimeLagClient","build_web_services","ignite","start_signature_bridge_events_watcher","start_tx_queue","TangleClient","build_web_services","ignite","start_dkg_pallet_watcher","start_dkg_proposal_handler","start_substrate_signature_bridge_events_watcher","start_substrate_vanchor_event_watcher","start_tx_queue"],"q":[[0,"webb_relayer"],[112,"webb_relayer::Error"],[117,"webb_relayer::service"],[148,"webb_relayer::service::evm"],[154,"webb_relayer::service::substrate"]],"d":["Arkworks Errors.","Error in the underlying Http/Ws server.","Bridge not configured or not enabled.","","EVM Chain not found.","Config loading error.","Ethers currency conversion error","","Elliptic Curve error.","An enum of all possible errors that could be encountered ‚Ä¶","Ether wallet errors.","Smart contract error.","Smart contract error.","Smart contract error.","Smart contract error.","Ether contract error for TimeLag provider.","Ether contract error for TimeLag provider.","Error in Http Provider (ethers client).","Ethers Timelag provider error.","Ethers Timelag provider error.","Etherscan API error","Etherscan api configuration not found.","Failed to send the response to the client.","","a backgorund task failed and force restarted.","","Generic error.","Error from Glob Iterator.","Error while iterating over a glob pattern.","HTTP Error","Invalid Merkle root","An Io error occurred.","JSON Error occurred.","Runtime metadata error.","Missing Secrets in the config, either Private key, SURI, ‚Ä¶","Missing Static Transaction Validation Details This error ‚Ä¶","Substrate node not found.","Error while parsing the config files.","Failed to convert string to float","","Provider not found error.","","Reqwest error","Restart relayer.","A type alias for the result for webb relayer, that uses ‚Ä¶","SCALE Codec error.","Secp256k1 error occurred.","Sled database error.","Sled transaction error.","Basic error for the substrate runtime.","a backgorund task failed and stopped Abnormally.","Error while parsing a URL.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","","A module for starting long-running tasks for event ‚Ä¶","","","","","","","","","The chain id of the chain.","The chain id of the node.","The chain id of the node.","","The chain id of the bridge.","Dkg","Mocked","None","Proposal signing backend config","Type alias for Sled-based database store","","","","","Sets up the web socket server for the relayer, routing ‚Ä¶","","","","EVM Specific Services","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Starts all background services for all chains configured ‚Ä¶","","Calls <code>U::from(self)</code>.","","","","utility to configure proposal signing backend","Substrate Specific Services","","","","","","","Type alias for providers","Type alias for Timelag provider","Setup and build all the EVM web services and handlers.","Fires up all background services for all EVM chains ‚Ä¶","Starts the event watcher for Signature Bridge contract.","Starts the transaction queue task","Type alias for the Tangle DefaultConfig","Setup and build all the Substrate web services and ‚Ä¶","Fires up all background services for all Substrate chains ‚Ä¶","Starts the event watcher for DKG pallet events watcher.","Starts the event watcher for DKG proposal handler events.","Starts the event watcher for Signature Bridge Pallet.","Starts the event watcher for Substrate vanchor events.","Starts the transaction queue task for Substrate extrinsics"],"i":[3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,67,68,69,70,71,58,58,58,0,0,58,58,58,58,0,58,58,58,0,58,58,58,0,58,58,58,58,58,0,0,58,58,58,58,58,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[3,4],[[6,[5]]]],[[3,4],[[6,[5]]]],[[[9,[[8,[7]]]]],3],[10,3],[11,3],[12,3],[13,3],[14,3],[15,3],[[]],[16,3],[17,3],[[[20,[18,19]]],3],[[[9,[[8,[[22,[[21,[7]]]]]]]]],3],[23,3],[[[25,[[24,[[8,[[22,[[21,[7]]]]]]]]]]],3],[[[25,[[8,[[22,[[21,[7]]]]]]]]],3],[26,3],[[[9,[[27,[[24,[[8,[[22,[[21,[7]]]]]]]]]]]]],3],[[[9,[[27,[[8,[[22,[[21,[7]]]]]]]]]]],3],[[[9,[[24,[[8,[[22,[[21,[7]]]]]]]]]]],3],[28,3],[[[30,[29]]],3],[31,3],[[[9,[[35,[[8,[7]],[34,[[33,[32]]]]]]]]],3],[36,3],[[[38,[37]]],3],[39,3],[40,3],[41,3],[42,3],[43,3],[29,3],[37,3],[44,3],[45,3],[[]],[[]],[[],2],[[]],[[[20,[19]]],[[20,[1,19]]]],[24,[[24,[1]]]],[46,[[46,[1]]]],[47],0,[3,[[48,[18]]]],[[],49],[[],6],[[],6],[[],50],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[]],[[]],[51,52],[2],[2],[2],0,[[]],[[]],[[]],[[51,[24,[53]]],52],[[],2],[[]],[[[20,[19]]],[[20,[1,19]]]],[24,[[24,[1]]]],[46,[[46,[1]]]],[[51,[24,[53]],54,[48,[[56,[55]]]],[48,[57]]],[[52,[58]]]],0,[[],6],[[],6],[[],50],[[]],[[]],[[]],0,0,[[],[[59,[[24,[51]]]]]],[[51,[24,[53]]],52],[[51,60,[24,[61]],[24,[53]]],52],[[51,62,[24,[53]]],52],0,[[],[[59,[[24,[51]]]]]],[[51,[24,[53]]],52],[[51,63,62,[24,[53]]],52],[[51,64,62,[24,[53]]],52],[[51,65,62,[24,[53]]],52],[[51,66,62,[24,[53]]],52],[[51,62,[24,[53]]],52]],"c":[],"p":[[8,"Any"],[15,"usize"],[4,"Error"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Provider"],[3,"Provider"],[4,"ContractError"],[4,"MetadataError"],[3,"ParseFloatError"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"Error"],[8,"Error"],[3,"Global"],[3,"Box"],[3,"MultiProvider"],[3,"RetryClient"],[4,"Error"],[3,"Arc"],[4,"TimeLagError"],[4,"Error"],[3,"TimeLag"],[3,"PatternError"],[4,"ConfigError"],[3,"Error"],[3,"Error"],[3,"Secp256k1"],[3,"SigningKey"],[3,"Wallet"],[3,"SignerMiddleware"],[4,"EtherscanError"],[3,"Error"],[4,"TransactionError"],[3,"GlobError"],[4,"ParseError"],[4,"ProviderError"],[4,"ConversionError"],[3,"Error"],[4,"GasOracleError"],[4,"WalletError"],[3,"Rc"],[3,"Demand"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"RelayerContext"],[6,"Result"],[6,"Store"],[4,"TypedChainId"],[4,"LinkedAnchorConfig"],[3,"Vec"],[4,"ProposalSigningBackendConfig"],[4,"ProposalSigningBackendSelector"],[3,"Router"],[3,"SignatureBridgeContractConfig"],[6,"TimeLagClient"],[15,"u32"],[3,"DKGPalletConfig"],[3,"DKGProposalHandlerPalletConfig"],[3,"SignatureBridgePalletConfig"],[3,"VAnchorBn254PalletConfig"],[13,"ChainNotFound"],[13,"NodeNotFound"],[13,"EtherscanConfigNotFound"],[13,"FetchTokenPriceError"],[13,"BridgeNotFound"]]},\
"webb_relayer_config":{"doc":"Relayer Configuration Module üï∏Ô∏è","t":"DDDDDLLLLLAMMLLLLLLLLLLMALLLLLLLLLLMALLLLLLLLLLMMLLLALLLLLLLLLLLLLLLLLLLLMAAMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLAAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLNENDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLDRLLLLLMFLLLLLLLLLLLLFLFMLLLLLMLFFFFFFDLLLLLLLLLLLLMMLLLLLLLLLLMMMLMLLLLLLLDEDDENNDNDNDLLLLLLLLMMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNDNDELLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLDNDNDNENDDDNDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFFF","n":["EtherscanApiConfig","FeaturesConfig","TxQueueConfig","UnlistedAssetConfig","WebbRelayerConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","anchor","api_key","api_url","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","assets","block_poller","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","cli","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data_query","decimals","default","default","default","defaults","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eth2","event_watcher","evm","evm","evm_etherscan","features","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","governance_relay","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_sleep_interval","name","port","price","private_tx_relay","serialize","serialize","serialize","serialize","serialize","signing_backend","substrate","substrate","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","utils","verify","vzip","vzip","vzip","vzip","vzip","Evm","LinkedAnchorConfig","Raw","RawResourceId","Substrate","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_raw_resource_id","resource_id","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","BlockPollerConfig","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","light_client_rpc_url","max_blocks_per_step","polling_interval","print_progress_interval","serialize","start_block","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Opts","PACKAGE_ID","as_any","as_any_mut","borrow","borrow_mut","clap","config_dir","create_store","deref","deref_mut","drop","from","from_clap","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","load_config","parse_args","setup_logger","tmp","try_from","try_into","type_id","unchecked_into","unique_saturated_into","verbose","vzip","enable_data_query","enable_leaves_watcher","max_blocks_per_step","print_progress_interval","relayer_port","unlisted_assets","EventsWatcherConfig","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","enable_data_query","enabled","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","max_blocks_per_step","polling_interval","print_progress_interval","serialize","sync_blocks_from","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","CommonContractConfig","Contract","EvmChainConfig","EvmLinkedAnchorConfig","HttpEndpoint","Multiple","SignatureBridge","SignatureBridgeContractConfig","Single","SmartAnchorUpdatesConfig","VAnchor","VAnchorContractConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","address","address","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","beneficiary","block_confirmations","block_poller","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","common","contracts","default","deployed_at","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","enabled","enabled","events_watcher","events_watcher","explorer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","http_endpoint","init","init","init","init","init","init","init","init","initial_time_delay","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","linked_anchors","max_time_delay","min_time_delay","name","private_key","proposal_signing_backend","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","smart_anchor_updates","time_delay_window_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_queue","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ws_endpoint","DkgNode","DkgNodeProposalSigningBackendConfig","Mocked","MockedProposalSigningBackendConfig","ProposalSigningBackendConfig","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_id","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","private_key","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","DKGPalletConfig","DKGProposalHandler","DKGProposalHandlerPalletConfig","DKGProposals","DKGProposalsPalletConfig","Dkg","Pallet","SignatureBridge","SignatureBridgePalletConfig","SubstrateConfig","SubstrateLinkedAnchorConfig","VAnchorBn254","VAnchorBn254PalletConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","beneficiary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","enabled","events_watcher","events_watcher","events_watcher","events_watcher","events_watcher","explorer","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","http_endpoint","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","linked_anchors","name","pallet","pallets","proposal_signing_backend","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","suri","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tree_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_queue","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ws_endpoint","load","parse_from_files","postloading_process","search_config_files"],"q":[[0,"webb_relayer_config"],[180,"webb_relayer_config::anchor"],[245,"webb_relayer_config::block_poller"],[281,"webb_relayer_config::cli"],[313,"webb_relayer_config::defaults"],[319,"webb_relayer_config::event_watcher"],[356,"webb_relayer_config::evm"],[632,"webb_relayer_config::signing_backend"],[726,"webb_relayer_config::substrate"],[991,"webb_relayer_config::utils"]],"d":["Configuration to add etherscan API key","FeaturesConfig is the configuration for running relayer ‚Ä¶","TxQueueConfig is the configuration for the TxQueue.","UnlistedAssetConfig is the configuration for the assets ‚Ä¶","WebbRelayerConfig is the configuration for the webb ‚Ä¶","","","","","","Generic anchor configuration","A wrapper type around the <code>String</code> to allow reading it from ‚Ä¶","An optional URL to use for the Etherscan API instead of ‚Ä¶","","","","","","","","","","","Configuration for the assets that are not listed on any ‚Ä¶","Block poller configuration","","","","","","","","","","","Chain Id","CLI configuration","","","","","","","","","","","Enable data quering for leafs","The decimals of the asset.","","","","Module for all the default values.","","","","","","","","","","","","","","","","","","","","","ETH2 based networks and the configuration","Event watcher configuration","EVM configuration","EVM based networks and the configuration.","Etherscan API key configuration for evm based chains.","Configuration for running relayer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Enable governance relaying","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Maximum number of milliseconds to wait before dequeuing a ‚Ä¶","The name of the asset.","WebSocket Server Port number","The Price of the asset in USD.","Enable private tx relaying","","","","","","Signing backend configuration","Substrate configuration","Substrate based networks and the configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Utils for processing configuration","Makes sure that the config is valid, by going through the ‚Ä¶","","","","","","Linked anchor configuration for evm based chains","LinkedAnchorConfig is configuration for the linked ‚Ä¶","Linked anchor configuration for raw resource Id   ","Linked anchor config for Evm based target system","Linked anchor configuration for substrate based chains","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Convert linked anchor to Raw resource Id format","Raw resource Id","","","","","","","","","","","","","","","","","Block poller configuration","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Light client RPC url","The maximum blocks per step.","Polling interval in milliseconds","The print progress interval.","","The starting block to listen at.","","","","","","","","The Webb Relayer Command-line tool","Package identifier, where the default configuration &amp; ‚Ä¶","","","","","","Directory that contains configration files.","Creates a database store for the relayer based on the ‚Ä¶","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Loads the configuration from the given directory.","","Sets up the logger for the relayer, based on the verbosity ‚Ä¶","Create the Database Store in a temporary directory. and ‚Ä¶","","","","","","A level of verbosity, and can be used multiple times","","Data query access is set to <code>true</code> by default.","Leaves watcher is set to <code>true</code> by default.","The maximum events per step is set to <code>100</code> by default.","The print progress interval is set to <code>7_000</code> by default.","The default port the relayer will listen on. Defaults to ‚Ä¶","The default unlisted assets.","EventsWatchConfig is the configuration for the events ‚Ä¶","","","","","","","","","","","","","A flag for enabling API endpoints for querying data from ‚Ä¶","if it is enabled for this chain or not.","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","The maximum number of events to fetch in one request.","Polling interval in milliseconds","print sync progress frequency in milliseconds if it is ‚Ä¶","","Sync blocks from","","","","","","","","CommonContractConfig represents the common configuration ‚Ä¶","Enumerates the supported contract configurations.","EvmChainConfig is the configuration for the EVM based ‚Ä¶","Linked anchor config for Evm based target system","configuration for adding http endpoints.","Multiple http endpoints","The Signature Bridge contract configuration.","Signature Bridge contract configuration.","Single http endpoint","Smart Anchor Updates applies polices to the AnchorUpdate ‚Ä¶","The VAnchor contract configuration.","VAnchorContractConfig represents the configuration for the ‚Ä¶","","","","","","","","","The V-anchor Contract Address.","The address of this contract on this chain.","","","","","","","","","","","","","","","","","Optionally, a user can specify an account to receive ‚Ä¶","Block confirmations","Block poller/listening configuration","","","","","","","","","","","","","","","","","chain specific id (output of chainId opcode on EVM ‚Ä¶","The chain Id","","","","","","","","","","","","","","","","","Common contract configuration.","Common contract configuration.","Supported contracts over this chain.","","the block number where this contract got deployed at.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boolean indicating EVM based networks are enabled or not.","Enables smart anchor updates","Controls the events watcher","Controls the events watcher","Block Explorer for this chain.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Http(s) Endpoint for quick Req/Res","","","","","","","","","Initial time delay for the time delay sliding window","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A List of linked Anchor Contracts (on other chains) to ‚Ä¶","Maximum time delay for the time delay sliding window","Minimum time delay for the time delay sliding window","String that groups configuration for this chain on a ‚Ä¶","The Private Key of this account on this network the format ‚Ä¶","The type of the optional signing backend used for signing ‚Ä¶","","","","","","","","","For configuring the smart anchor updates","Time delay sliding window size","","","","","","","","","","","","","","","","","","","","","","","","","","TxQueue configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Websocket Endpoint for long living connections","Uses an already running and configured DKG Node for ‚Ä¶","DKGNodeSigningBackendConfig represents the configuration ‚Ä¶","Uses the Private Key of the current Governor to sign ‚Ä¶","MockedSigningBackendConfig represents the configuration ‚Ä¶","Enumerates the supported different signing backends ‚Ä¶","","","","","","","","","","","","","","","","The chain id of the DKG Node that this contract will use.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The private key of the current Governor.","","","","","","","","","","","","","","","","","","","","","","","","","DKGPalletConfig represents the configuration for the DKG ‚Ä¶","<code>dkg-proposal-handler</code> or as named in the runtime as ‚Ä¶","DKGProposalHandlerPalletConfig represents the ‚Ä¶","<code>dkg-proposals</code> or as named in the runtime as <code>DKGProposals</code> ‚Ä¶","DKGProposalsPalletConfig represents the configuration for ‚Ä¶","<code>dkg-metadata</code> or as named in the runtime as <code>DKG</code> pallet.","Enumerates the supported pallets configurations.","<code>signature-bridge</code> or as named in the runtime as ‚Ä¶","SignatureBridgePalletConfig represents the configuration ‚Ä¶","SubstrateConfig is the relayer configuration for the ‚Ä¶","Linked anchor config for Substrate based target system","<code>vanchor-bn256</code> or as named in the runtime as <code>VAnchorBn256</code> ‚Ä¶","VAnchorBn254PalletConfig represents the configuration for ‚Ä¶","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, a user can specify an account to receive ‚Ä¶","","","","","","","","","","","","","","","","","chain specific id (output of ChainIdentifier constant on ‚Ä¶","chain Id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Boolean indicating Substrate networks are enabled or not.","Controls the events watcher","Controls the events watcher","Controls the events watcher","Controls the events watcher","Controls the events watcher","Block Explorer for this Substrate node.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Http(s) Endpoint for quick Req/Res","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A List of linked Anchor on this chain.","String that groups configuration for this chain on a ‚Ä¶","pallet index","Supported pallets over this substrate node.","The type of the optional signing backend used for signing ‚Ä¶","","","","","","","","","Interprets the string in order to generate a key Pair. in ‚Ä¶","","","","","","","","","tree Id","","","","","","","","","","","","","","","","","TxQueue configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Websocket Endpoint for long living connections","Load the configuration files and","Try to parse the <code>WebbRelayerConfig</code> from the given config ‚Ä¶","The postloading_process exists to validate configuration ‚Ä¶","A helper function that will search for all config files in ‚Ä¶"],"i":[0,0,0,0,0,3,4,5,6,7,0,5,5,3,4,5,6,7,3,4,5,6,7,3,0,3,4,5,6,7,3,4,5,6,7,5,0,3,4,5,6,7,3,4,5,6,7,4,7,3,4,6,0,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,0,0,3,3,3,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,3,4,4,5,5,6,6,7,7,4,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,6,7,3,7,4,3,4,5,6,7,0,0,3,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,3,4,5,6,7,0,3,3,4,5,6,7,21,0,21,0,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,20,21,21,20,21,20,21,20,21,20,21,20,21,21,20,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,0,24,0,24,24,24,24,24,24,24,24,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,41,43,0,41,0,43,0,40,41,42,43,44,45,46,47,42,44,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,40,40,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,42,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,46,47,40,45,44,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,45,46,47,40,40,41,41,42,43,44,45,46,47,40,41,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,40,40,41,42,43,44,45,46,47,45,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,46,45,45,40,40,46,40,41,42,43,44,45,46,47,46,45,40,41,42,43,44,45,46,47,41,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,41,42,43,44,45,46,47,40,49,0,49,0,0,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,50,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,49,50,50,51,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,49,50,51,0,54,0,54,0,54,0,54,0,0,0,54,0,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,55,56,57,58,59,52,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,52,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,59,52,53,52,59,52,53,54,55,56,57,58,59,52,52,53,54,55,56,57,58,59,53,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,53,54,55,56,57,58,59,52,0,0,0,0],"f":[0,0,0,0,0,[1],[1],[1],[1],[1],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],0,0,[[],3],[[],4],[[],6],0,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[9,[[10,[3]]]],[9,[[10,[4]]]],[9,[[10,[5]]]],[9,[[10,[6]]]],[9,[[10,[7]]]],[8],[8],[8],[8],[8],0,0,0,0,0,0,[[3,11],12],[[4,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,0,0,0,0,[[3,17],10],[[4,17],10],[[5,17],10],[[6,17],10],[[7,17],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[3,19],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[20,20],[21,21],[[]],[[]],[8],[8],[8],[8],[9,[[10,[20]]]],[9,[[10,[21]]]],[8],[8],[[20,11],12],[[21,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[21,21],0,[[20,17],10],[[21,17],10],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[22,22],[[]],[[],22],[8],[8],[9,[[10,[22]]]],[8],[[22,11],12],[[]],[[]],[[]],[[]],[[],8],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],0,0,0,0,[[22,17],10],0,[[]],[[],10],[[],10],[[],18],[[]],[[]],[[]],0,0,[[],2],[[],2],[[]],[[]],[[],23],0,[24,[[26,[25]]]],[8],[8],[8],[[]],[27,24],[[]],[[]],[[],8],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[[30,[[29,[28]]]]],[[10,[3,31]]]],[[],[[10,[24]]]],[[32,33],26],0,[[],10],[[],10],[[],18],[[]],[[]],0,[[]],[[],34],[[],34],[[],35],[[],35],[[],36],[[],[[38,[37,7]]]],0,[1],[[],2],[[],2],[[]],[[]],[39,39],[[]],[[],39],[8],[8],[9,[[10,[39]]]],[8],0,0,[[39,11],12],[[]],[[]],[[]],[[]],[[],8],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],0,0,0,[[39,17],10],0,[[]],[[],10],[[],10],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],45],0,[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[9,[[10,[40]]]],[9,[[10,[41]]]],[9,[[10,[42]]]],[9,[[10,[43]]]],[9,[[10,[44]]]],[9,[[10,[45]]]],[9,[[10,[46]]]],[9,[[10,[47]]]],[8],[8],[8],[8],[8],[8],[8],[8],0,0,0,0,0,[[40,11],12],[[41,11],12],[[41,11],12],[[42,11],12],[[43,11],12],[[44,11],12],[[45,11],12],[[46,11],12],[[47,11],12],[[]],[48,41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,0,0,0,0,0,[[40,17],10],[[41,17],10],[[42,17],10],[[43,17],10],[[44,17],10],[[45,17],10],[[46,17],10],[[47,17],10],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[49,49],[50,50],[51,51],[[]],[[]],[[]],[8],[8],[8],[8],[8],[8],[9,[[10,[49]]]],[9,[[10,[50]]]],[9,[[10,[51]]]],[8],[8],[8],[[49,11],12],[[50,11],12],[[51,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,[[49,17],10],[[50,17],10],[[51,17],10],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[9,[[10,[52]]]],[9,[[10,[53]]]],[9,[[10,[54]]]],[9,[[10,[55]]]],[9,[[10,[56]]]],[9,[[10,[57]]]],[9,[[10,[58]]]],[9,[[10,[59]]]],[8],[8],[8],[8],[8],[8],[8],[8],0,0,0,0,0,0,0,[[52,11],12],[[53,11],12],[[54,11],12],[[55,11],12],[[56,11],12],[[57,11],12],[[58,11],12],[[59,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,0,0,0,0,[[52,17],10],[[53,17],10],[[54,17],10],[[55,17],10],[[56,17],10],[[57,17],10],[[58,17],10],[[59,17],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[29,[28]]],[[19,[3]]]],[[],[[19,[3]]]],[3,[[19,[3]]]],[[[29,[28]]],[[19,[[61,[60]]]]]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"WebbRelayerConfig"],[3,"FeaturesConfig"],[3,"EtherscanApiConfig"],[3,"TxQueueConfig"],[3,"UnlistedAssetConfig"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Serializer"],[3,"TypeId"],[6,"Result"],[3,"RawResourceId"],[4,"LinkedAnchorConfig"],[3,"BlockPollerConfig"],[3,"App"],[3,"Opts"],[3,"SledStore"],[6,"Result"],[3,"ArgMatches"],[3,"Path"],[8,"AsRef"],[4,"Option"],[3,"Error"],[15,"i32"],[15,"str"],[15,"bool"],[15,"u64"],[15,"u16"],[3,"String"],[3,"HashMap"],[3,"EventsWatcherConfig"],[3,"EvmChainConfig"],[4,"HttpEndpoint"],[3,"EvmLinkedAnchorConfig"],[4,"Contract"],[3,"CommonContractConfig"],[3,"SmartAnchorUpdatesConfig"],[3,"VAnchorContractConfig"],[3,"SignatureBridgeContractConfig"],[3,"Url"],[4,"ProposalSigningBackendConfig"],[3,"DkgNodeProposalSigningBackendConfig"],[3,"MockedProposalSigningBackendConfig"],[3,"SubstrateConfig"],[3,"SubstrateLinkedAnchorConfig"],[4,"Pallet"],[3,"DKGProposalsPalletConfig"],[3,"DKGPalletConfig"],[3,"DKGProposalHandlerPalletConfig"],[3,"SignatureBridgePalletConfig"],[3,"VAnchorBn254PalletConfig"],[3,"PathBuf"],[3,"Vec"]]},\
"webb_relayer_context":{"doc":"Relayer Context Module üï∏Ô∏è","t":"DDLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLL","n":["RelayerContext","Shutdown","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config","deref","deref","deref_mut","deref_mut","drop","drop","evm_provider","evm_wallet","fmt","from","from","from_mut","from_mut","from_ref","from_ref","from_ref","gas_oracle","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","metrics","new","new","price_oracle","recv","shutdown","shutdown_signal","store","substrate_provider","substrate_wallet","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip"],"q":[[0,"webb_relayer_context"]],"d":["RelayerContext contains Relayer‚Äôs configuration and ‚Ä¶","Listens for the server shutdown signal.","","","","","","","","","","","","The configuration of the relayer.","","","","","","","Returns a new <code>EthereumProvider</code> for the relayer.","Sets up and returns an EVM wallet for the relayer.","","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Returns a gas oracle for the given chain.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Represents the metrics for the relayer","Creates a new RelayerContext.","Create a new <code>Shutdown</code> backed by the given ‚Ä¶","Returns a price oracle for fetching token prices.","Receive the shutdown notice, waiting if necessary.","Sends a shutdown signal to all subscribed ‚Ä¶","Returns a broadcast receiver handle for the shutdown ‚Ä¶","Returns Sled-based database store","Sets up and returns a Substrate client for the relayer.","Sets up and returns a Substrate wallet for the relayer.","","","","","","","","","","","","",""],"i":[0,0,3,3,14,3,14,3,14,3,14,3,3,3,3,14,3,14,3,14,3,3,14,3,14,3,14,3,3,14,3,3,14,3,14,3,14,3,14,3,14,3,3,14,3,14,3,3,3,3,3,3,3,14,3,14,3,14,3,14,3,14,3,14],"f":[0,0,[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[3,3],[[]],0,[4],[4],[4],[4],[4],[4],[[3,[6,[5]]],[[12,[[11,[[10,[[9,[[8,[7]]]]]]]]]]]],[[3,[6,[5]]],[[12,[13]]]],[[14,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,[6,[5]]],[[12,[17]]]],[[],4],[[],4],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],0,[[21,22],[[12,[3]]]],[23,14],[3,[[11,[24]]]],[14],[3],[3,14],[3,22],[[3,[6,[5]]],[[12,[[26,[25]]]]]],[[3,[6,[5]]],[[12,[27]]]],[[]],[[],28],[[],28],[[],28],[[],28],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"RelayerContext"],[15,"usize"],[3,"U256"],[8,"Into"],[3,"Provider"],[3,"MultiProvider"],[3,"RetryClient"],[3,"Provider"],[3,"Arc"],[6,"Result"],[6,"LocalWallet"],[3,"Shutdown"],[3,"Formatter"],[6,"Result"],[3,"Median"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"WebbRelayerConfig"],[3,"SledStore"],[3,"Receiver"],[3,"PriceOracleMerger"],[8,"Config"],[3,"OnlineClient"],[3,"Pair"],[4,"Result"],[3,"TypeId"]]},\
"webb_relayer_handler_utils":{"doc":"","t":"EEGNNNNNNNEGNNNNDNENNNNNEGNNNNNDDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["Command","CommandResponse","CommandStream","Connected","Connecting","Disconnected","DroppedFromMemPool","Error","Errored","Evm","EvmCommandType","EvmVanchorCommand","Failed","Finalized","InvalidMerkleRoots","InvalidRelayerAddress","IpInformationResponse","Network","NetworkStatus","Ping","Pong","Sent","Submitted","Substrate","SubstrateCommandType","SubstrateVAchorCommand","UnsupportedChain","UnsupportedContract","VAnchor","VAnchor","Valid","WebbI128","WebbI256","Withdraw","WithdrawStatus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_withdraw_error","ip","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","reason","code","reason","tx_hash","tx_hash"],"q":[[0,"webb_relayer_handler_utils"],[251,"webb_relayer_handler_utils::NetworkStatus"],[252,"webb_relayer_handler_utils::WithdrawStatus"]],"d":["Type of Command to use","Enumerates the command responses","Type alias for mpsc::Sender","Relayer is connected to the network.","Relayer is connecting to the network.","Relayer is disconnected from the network.","Transaction dropped from mempool, send it again.","An error occurred","Invalid transaction.","EVM specific subcommand.","Enumerates the supported evm commands for relaying ‚Ä¶","The command type for EVM vanchor transactions","Network failure with error message.","The transaction is in the block.","Invalid Merkle roots.","Invalid Relayer address in the proof","Representation for IP address response","Network Status","Enumerates the network status response of the relayer","Ping?","Pong?","The transaction is sent to the network.","The transaction is submitted to the network.","Substrate specific subcommand.","Enumerates the supported substrate commands for relaying ‚Ä¶","The command type for Substrate vanchor txes","This network (chain) is not supported by the relayer.","This contract is not supported by the relayer.","Webb Variable Anchors.","Webb Variable Anchors.","Valid transaction.","A wrapper type around <code>i128</code> that implements a correct way ‚Ä¶","A wrapper type around <code>I256</code> that implements a correct way ‚Ä¶","Withdrawal Status","Enumerates the withdraw status response of the relayer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A helper function to extract the error code and the reason ‚Ä¶","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error message","Error Code.","Error Message.","The transaction hash.","The transaction hash."],"i":[0,0,0,9,9,9,10,8,10,5,0,0,9,10,10,9,0,8,0,5,8,10,10,5,0,0,9,9,6,7,10,0,0,8,0,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,3,4,5,6,7,8,9,10,3,4,5,6,7,8,9,10,3,4,5,6,7,8,9,10,8,8,9,9,10,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,0,14,14,3,4,8,9,10,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,14,3,4,5,6,7,8,9,10,25,26,26,27,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[12,[3]]]],[11,[[12,[4]]]],[11,[[12,[5]]]],[11,[[12,[6]]]],[11,[[12,[7]]]],[[8,8],13],[[9,9],13],[[10,10],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[14,15],16],[[3,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[7,15],16],[[8,15],16],[[9,15],16],[[10,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[[[18,[17]]],[[18,[2,17]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[[[22,[21]]],10],0,[[14,23],12],[[3,23],12],[[4,23],12],[[8,23],12],[[9,23],12],[[10,23],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"WebbI256"],[3,"WebbI128"],[4,"Command"],[4,"EvmCommandType"],[4,"SubstrateCommandType"],[4,"CommandResponse"],[4,"NetworkStatus"],[4,"WithdrawStatus"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"IpInformationResponse"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Middleware"],[4,"ContractError"],[8,"Serializer"],[3,"TypeId"],[13,"Failed"],[13,"Errored"],[13,"Submitted"],[13,"Finalized"]]},\
"webb_relayer_handlers":{"doc":"Relayer handlers for HTTP/Socket calls","t":"FFFFFAFDLLLLLLLLLLLLAMLLLLLALLLLLAALMLLLLLLLDLLLLLLLLLLLFLLLLLLLLLLLLDDDLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLDLLLLLLLLLLLFFLLLLLLLLLLLLDMLLLLLLLLLLLFFFLLLLLLMMLLLLLL","n":["handle_cmd","handle_evm_fee_info","handle_socket_info","handle_substrate_fee_info","handle_text","routes","websocket_handler","OptionalRangeQuery","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","encrypted_outputs","end","fmt","from","from_mut","from_ref","from_ref","info","init","into","into_any","into_any_arc","into_any_rc","leaves","metric","serialize","start","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","EncryptedOutputsCacheResponse","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_ref","handle_encrypted_outputs_cache_evm","init","into","into_any","into_any_arc","into_any_rc","serialize","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","BuildInfo","RelayerConfig","RelayerInformationResponse","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","commit","config","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","handle_relayer_info","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","serialize","serialize","serialize","timestamp","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","version","vzip","vzip","vzip","LeavesCacheResponse","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_ref","handle_leaves_cache_evm","handle_leaves_cache_substrate","init","into","into_any","into_any_arc","into_any_rc","serialize","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","ResourceMetricResponse","account_balance","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_ref","handle_evm_metric_info","handle_metric_info","handle_substrate_metric_info","init","into","into_any","into_any_arc","into_any_rc","serialize","total_fee_earned","total_gas_spent","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"webb_relayer_handlers"],[7,"webb_relayer_handlers::routes"],[44,"webb_relayer_handlers::routes::encrypted_outputs"],[69,"webb_relayer_handlers::routes::info"],[147,"webb_relayer_handlers::routes::leaves"],[173,"webb_relayer_handlers::routes::metric"]],"d":["Handles the command prompts for EVM and Substrate chains","Handler for fee estimation","Handles the socket address response","Handler for fee estimation","Sets up a websocket channels for message sending.","Module handles relayer API","Wait for websocket connection upgrade","A (half-open) range bounded inclusively below and ‚Ä¶","","","","","","","","","","","","","Module for handling encrypted commitment leaves API","The upper bound of the range (exclusive).","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Module for handling relayer info API","","Calls <code>U::from(self)</code>.","","","","Module for handle commitment leaves API","Module for handling relayer metric API","","The lower bound of the range (inclusive).","","","","","","","","Response containing encrypted outputs.","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Handles encrypted outputs data requests for evm","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Build info data","Relayer config data","Relayer configuration response","","","","","","","","","","","","","Relayer build info","Commit hash of the relayer","Relayer chain config","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","Handles relayer configuration requests","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Build time of the relayer","","","","","","","","","","","","","","","","Version of the relayer","","","","Leaves cache response","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Handles leaf data requests for evm","Handles leaf data requests for substrate","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Response with resource metrics data","Account Balance","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Handles relayer metric requests for evm based resource","Handles relayer metric requests","Handles relayer metric requests for substrate based ‚Ä¶","","Calls <code>U::from(self)</code>.","","","","","Total fees earned on Resource.","Total gas spent on Resource.","","","","","",""],"i":[0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,21,0,21,21,21,21,21,0,0,21,21,21,21,21,21,21,21,21,0,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,33,34,35,33,34,35,33,34,35,33,34,35,34,33,34,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,0,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,33,34,35,33,34,35,33,34,35,33,34,35,33,34,35,33,33,34,35,0,36,36,36,36,36,36,36,36,36,36,36,0,0,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":[[[1,2,3],[[5,[4]]]],[[[7,[[6,[1]]]],8],[[5,[[10,[9]],11]]]],[12,[[10,[13]]]],[[[7,[[6,[1]]]],8],[[5,[[10,[14]],11]]]],[[1,15],16],0,[[17,[7,[[6,[1]]]]],18],0,[19],[[],20],[[],20],[[]],[[]],[21,21],[[]],[[],21],[22],[22],[23,[[5,[21]]]],[22],0,0,[[21,24],25],[[]],[[]],[[]],[[]],0,[[],22],[[]],[[[27,[26]]],[[27,[20,26]]]],[6,[[6,[20]]]],[28,[[28,[20]]]],0,0,[[21,29],5],0,[[]],[[],5],[[],5],[[],30],[[]],[[]],[[]],0,[[],20],[[],20],[[]],[[]],[22],[22],[22],[[31,24],25],[[]],[[]],[[]],[[[7,[[6,[1]]]],8,[32,[21]]],[[5,[[10,[31]],11]]]],[[],22],[[]],[[[27,[26]]],[[27,[20,26]]]],[6,[[6,[20]]]],[28,[[28,[20]]]],[[31,29],5],[[],5],[[],5],[[],30],[[]],[[]],[[]],0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[22],[22],[22],[22],[22],[22],[22],[22],[22],[[33,24],25],[[34,24],25],[[35,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[[6,[1]]]]],[[10,[35]]]],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[[27,[26]]],[[27,[20,26]]]],[[[27,[26]]],[[27,[20,26]]]],[[[27,[26]]],[[27,[20,26]]]],[6,[[6,[20]]]],[6,[[6,[20]]]],[6,[[6,[20]]]],[28,[[28,[20]]]],[28,[[28,[20]]]],[28,[[28,[20]]]],[[33,29],5],[[34,29],5],[[35,29],5],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],0,[[],20],[[],20],[[]],[[]],[22],[22],[22],[[36,24],25],[[]],[[]],[[]],[[[7,[[6,[1]]]],8,[32,[21]]],[[5,[[10,[36]],11]]]],[[[7,[[6,[1]]]],8,[32,[21]]],[[5,[[10,[36]],11]]]],[[],22],[[]],[[[27,[26]]],[[27,[20,26]]]],[6,[[6,[20]]]],[28,[[28,[20]]]],[[36,29],5],[[],5],[[],5],[[],30],[[]],[[]],[[]],0,0,[[],20],[[],20],[[]],[[]],[22],[22],[22],[[37,24],25],[[]],[[]],[[]],[[[7,[[6,[1]]]],8],[[10,[37]]]],[[],[[5,[38,11]]]],[[[7,[[6,[1]]]],8],[[10,[37]]]],[[],22],[[]],[[[27,[26]]],[[27,[20,26]]]],[6,[[6,[20]]]],[28,[[28,[20]]]],[[37,29],5],0,0,[[],5],[[],5],[[],30],[[]],[[]],[[]]],"c":[],"p":[[3,"RelayerContext"],[4,"Command"],[6,"CommandStream"],[4,"CommandResponse"],[4,"Result"],[3,"Arc"],[3,"State"],[3,"Path"],[3,"EvmFeeInfo"],[3,"Json"],[3,"HandlerError"],[3,"InsecureClientIp"],[3,"IpInformationResponse"],[3,"SubstrateFeeInfo"],[15,"str"],[6,"Result"],[3,"WebSocketUpgrade"],[6,"Response"],[3,"Private"],[8,"Any"],[3,"OptionalRangeQuery"],[15,"usize"],[8,"Deserializer"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Rc"],[8,"Serializer"],[3,"TypeId"],[3,"EncryptedOutputsCacheResponse"],[3,"Query"],[3,"BuildInfo"],[3,"RelayerConfig"],[3,"RelayerInformationResponse"],[3,"LeavesCacheResponse"],[3,"ResourceMetricResponse"],[3,"String"]]},\
"webb_relayer_store":{"doc":"Relayer Store Module üï∏Ô∏è","t":"NEDIINIECIQIQQIINCINLLLLLLLLLLLLLLLLLMKLLLLLLKKKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLKLKKKKKKLKLLLLLKKKLLLLLLLLLLLLKKALKKKLKKAKLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["Block","BridgeCommand","BridgeKey","EncryptedOutputCacheStore","EventHashStore","ExecuteProposalWithSignature","HistoryStore","HistoryStoreKey","InMemoryStore","IntoTypedChainId","Key","LeafCacheStore","Output","Output","QueueKey","QueueStore","ResourceId","SledStore","TokenPriceCacheStore","TransferOwnershipWithSignature","__clone_box","__clone_box","__clone_box","address","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clear_leaves_cache","clone","clone","clone","clone_into","clone_into","clone_into","contains_event","delete_event","dequeue_item","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","enqueue_item","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_resource_id","get_encrypted_output","get_encrypted_output_with_range","get_hash","get_hash","get_last_block_number","get_last_block_number_or_default","get_last_deposit_block_number","get_last_deposit_block_number_for_encrypted_output","get_leaves","get_leaves_with_range","get_price","get_target_block_number","get_target_block_number_or_default","has_item","hash","hash","init","init","init","insert_encrypted_output_and_last_deposit_block_number","insert_leaves_and_last_deposit_block_number","insert_price","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_typed_chain_id","item_key","mem","new","peek_item","queue_name","remove_item","serialize","set_last_block_number","set_target_block_number","sled","store_event","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","data","nonce","public_key","signature","signature","chain_id","resource_id","InMemoryStore","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clear_leaves_cache","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from_mut","from_ref","from_ref","get_encrypted_output","get_encrypted_output_with_range","get_last_block_number","get_last_block_number_or_default","get_last_deposit_block_number","get_last_deposit_block_number_for_encrypted_output","get_leaves","get_leaves_with_range","get_price","get_target_block_number","init","insert_encrypted_output_and_last_deposit_block_number","insert_leaves_and_last_deposit_block_number","insert_price","into","into_any","into_any_arc","into_any_rc","set_last_block_number","set_target_block_number","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","BridgeCmd","EvmTx","SledQueueKey","SledStore","SubstrateTx","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear_leaves_cache","clone","clone","clone_into","clone_into","contains_event","delete_event","dequeue_item","deref","deref","deref_mut","deref_mut","drop","drop","enqueue_item","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from_bridge_key","from_evm_chain_id","from_evm_with_custom_key","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_substrate_chain_id","from_substrate_with_custom_key","get_data_stored_size","get_encrypted_output","get_encrypted_output_with_range","get_last_block_number","get_last_deposit_block_number","get_last_deposit_block_number_for_encrypted_output","get_leaves","get_leaves_with_range","get_price","get_target_block_number","has_item","init","init","insert_encrypted_output_and_last_deposit_block_number","insert_leaves_and_last_deposit_block_number","insert_price","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","item_key","open","peek_item","queue_name","remove_item","set_last_block_number","set_target_block_number","store_event","temporary","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","bridge_key","chain_id","chain_id","optional_key","optional_key"],"q":[[0,"webb_relayer_store"],[160,"webb_relayer_store::BridgeCommand"],[165,"webb_relayer_store::HistoryStoreKey"],[167,"webb_relayer_store::mem"],[212,"webb_relayer_store::sled"],[309,"webb_relayer_store::sled::SledQueueKey"]],"d":["Block Queue Key","A Command sent to the Bridge to execute different actions.","A Bridge Key is a unique key used for Sending and ‚Ä¶","An Encrypted Output Cache Store is a simple trait that ‚Ä¶","A Simple Event Store, that does not store the events, ‚Ä¶","A Command sent to the Signature Bridge to execute a ‚Ä¶","HistoryStore is a simple trait for storing and retrieving ‚Ä¶","HistoryStoreKey contains the keys used to store the ‚Ä¶","A store that uses in memory data structures as the backend.","A way to convert an arbitrary type to a TypedChainId.","The type of the queue key.","A Leaf Cache Store is a simple trait that would help in ‚Ä¶","The Output type which is the leaf.","The Output type which is the encrypted output.","A trait for retrieving queue keys","A Queue Store is a simple trait that help storing items in ‚Ä¶","ResourceId Key","A store that uses <code>sled</code> as the backend.","A trait for Cached Token Price.","A Command sent to the Signature Bridge to transfer the ‚Ä¶","","","","Returns the address of the chain this key is for.","","","","","","","","","","","","","Returns the chain id of the chain this key is for.","The Chain ID of this Bridge key.","Clear leaf cache on relayer","","","","","","","Check if the event is stored in the store. the key is the ‚Ä¶","Delete the event from the store. the key is the hash of ‚Ä¶","Get an item from the queue, and removes it.","","","","","","","","","","","Insert an item into the queue.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Creates new BridgeKey from ResourceId","Get all the encrypted output for the given key.","Get the encrypted output for the given key and with the ‚Ä¶","","","Get the last block number for that contract. if not found, ‚Ä¶","an easy way to call the <code>get_last_block_number</code> where the ‚Ä¶","The last deposit info is sent to the client on leaf request","The last deposit info is sent to the client on ‚Ä¶","Get all the leaves for the given key.","Get the leaves for the given key and with the given range ‚Ä¶","Get the cached token price for the given token key. If the ‚Ä¶","Get the target block number. if not found, returns the ‚Ä¶","an easy way to call the <code>get_target_block_number</code>.","Check if the item is in the queue.","","","","","","Insert encrypted output and last deposit block number for ‚Ä¶","Insert leaves and last deposit block number for the given ‚Ä¶","Insert the cached token price for the given token key.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Consumes Self and returns a TypedChainId.","an <em>optional</em> different key for the same value stored in the ‚Ä¶","A module for managing in-memory storage of the relayer.","Creates new BridgeKey from a TargetSystem and a ChainId.","Get an item from the queue, without removing it.","The Queue name, used as a prefix for the keys.","Remove an item from the queue.","","Sets the new block number for that contract in the cache ‚Ä¶","Sets the Target Block number (Usually the latest block ‚Ä¶","A module for setting up and managing a Sled-based database.","Store the event in the store. the key is the hash of the ‚Ä¶","Returns the bytes of the key.","","","","","","","","","","","","","","","","","","","","","","","","The proposal to execute (encoded as bytes)","The nonce of this transfer.","The new owner public key.","The signature of the hash of the proposal bytes, Signed by ‚Ä¶","The signature of the hash of the nonce+public key, Signed ‚Ä¶","","","InMemoryStore is a store that stores the history of events ‚Ä¶","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Queue Key for Bridge Watcher Command Queue.","Queue Key for EVM based Transaction Queue.","SledQueueKey is a key for a queue in Sled.","SledStore is a store that stores the history of events in  ‚Ä¶","Queue Key for Substrate based Transaction Queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","from_bridge_key returns a Bridge specific SledQueueKey.","Create a new SledQueueKey from an evm chain id.","from_evm_with_custom_key returns an EVM specific ‚Ä¶","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Create a new SledQueueKey from an substrate chain id.","from_substrate_with_custom_key returns an Substrate ‚Ä¶","Gets the total amount of data stored on disk","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a new SledStore.","","","","","","","Creates a temporary SledStore.","","","","","","","","","","","","","","","","Specific Bridge Key.","EVM Chain Id.","Substrate Chain Id.","an optional key for this transaction.","an optional key for this transaction."],"i":[2,0,0,0,0,10,0,0,0,0,41,0,42,43,0,0,2,0,0,10,2,9,10,2,2,9,10,2,9,10,2,9,10,2,9,10,2,9,42,2,9,10,2,9,10,44,44,41,2,9,10,2,9,10,10,2,9,10,41,2,9,10,2,2,9,9,10,10,2,2,9,9,10,2,2,2,2,2,9,10,2,9,10,2,2,9,9,10,10,9,43,43,2,9,45,45,42,43,42,42,46,45,45,41,2,9,2,9,10,43,42,46,2,9,10,2,9,10,2,9,10,2,9,10,28,47,0,9,41,47,41,10,45,45,0,44,2,2,9,10,2,9,2,9,10,2,9,10,2,9,10,2,9,10,2,9,10,2,9,10,48,49,49,48,49,50,51,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,38,38,0,0,38,37,38,37,38,37,38,37,38,37,38,37,37,38,37,38,37,37,37,37,38,37,38,37,38,37,38,38,38,37,38,38,37,38,38,38,38,37,38,37,37,38,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,38,37,37,37,37,38,37,38,37,38,37,38,38,37,37,38,37,37,37,37,37,37,38,38,37,38,37,38,37,38,37,38,37,38,37,38,52,53,54,53,54],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[2,3],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[2,5],0,[[[0,[[6,[2]],7]]],8],[2,2],[9,9],[10,10],[[]],[[]],[[]],[[],[[8,[11]]]],[[],8],[[],[[8,[12]]]],[13],[13],[13],[13],[13],[13],[14,[[15,[10]]]],[13],[13],[13],[[],8],[[2,2],11],[[9,9],11],[[10,10],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[2,16],17],[[2,16],17],[[9,16],17],[[9,16],17],[[10,16],17],[18,2],[5,2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,9],[[[0,[[6,[2]],7]]],8],[[[0,[[6,[2]],7]],[19,[5]]],8],[[],20],[[],20],[[[0,[[6,[2]],7]],20],[[8,[20]]]],[[[0,[[6,[2]],7]]],[[8,[20]]]],[[[0,[[6,[2]],7]]],[[8,[20]]]],[[[0,[[6,[2]],7]]],[[8,[20]]]],[[[0,[[6,[2]],7]]],8],[[[0,[[6,[2]],7]],[19,[5]]],8],[21,[[8,[12]]]],[[[0,[[6,[2]],7]],20],[[8,[20]]]],[[[0,[[6,[2]],7]]],[[8,[20]]]],[[],[[8,[11]]]],[2],[9],[[],13],[[],13],[[],13],[[[0,[[6,[2]],7,22]],20],8],[[[0,[[6,[2]],7,22]],20],8],[21,8],[[]],[[]],[[]],[[[24,[23]]],[[24,[4,23]]]],[[[24,[23]]],[[24,[4,23]]]],[[[24,[23]]],[[24,[4,23]]]],[25,[[25,[4]]]],[25,[[25,[4]]]],[25,[[25,[4]]]],[26,[[26,[4]]]],[26,[[26,[4]]]],[26,[[26,[4]]]],[[],27],[[],12],0,[28,9],[[],[[8,[12]]]],[[],29],[[],[[8,[12]]]],[[10,30],15],[[[0,[[6,[2]],7]],20],[[8,[20]]]],[[[0,[[6,[2]],7]],20],[[8,[20]]]],0,[[],8],[2,[[32,[31]]]],[[]],[[]],[[]],[[],29],[[],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[[],4],[[],4],[[]],[[]],[[34,[0,[[6,[2]],7]]],8],[34,34],[[]],[[],34],[13],[13],[13],[[34,16],17],[[]],[[]],[[]],[[]],[[34,[0,[[6,[2]],7]]],8],[[34,[0,[[6,[2]],7]],[19,[5]]],8],[[34,[0,[[6,[2]],7]],20],[[8,[20]]]],[[34,[0,[[6,[2]],7]]],[[8,[20]]]],[[34,[0,[[6,[2]],7]]],[[8,[20]]]],[[34,[0,[[6,[2]],7]]],[[8,[20]]]],[[34,[0,[[6,[2]],7]]],8],[[34,[0,[[6,[2]],7]],[19,[5]]],8],[[34,21],[[8,[[12,[[0,[35,36,22,7]]]]]]]],[[34,[0,[[6,[2]],7]],20],[[8,[20]]]],[[],13],[[34,[0,[[6,[2]],7,22]],20],8],[[34,[0,[[6,[2]],7,22]],20],8],[[34,21,[0,[35,36,22,7]]],8],[[]],[[[24,[23]]],[[24,[4,23]]]],[25,[[25,[4]]]],[26,[[26,[4]]]],[[34,[0,[[6,[2]],7]],20],[[8,[20]]]],[[34,[0,[[6,[2]],7]],20],[[8,[20]]]],[[]],[[],15],[[],15],[[],33],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[37,[0,[[6,[2]],7]]],8],[37,37],[38,38],[[]],[[]],[37,[[8,[11]]]],[37,8],[37,[[8,[[12,[[0,[35,36,22]]]]]]]],[13],[13],[13],[13],[13],[13],[[37,[0,[35,36,22]]],8],[[38,38],11],[[],11],[[],11],[[37,16],17],[[38,16],17],[[38,16],17],[[]],[[]],[9,38],[5,38],[5,38],[[]],[[]],[[]],[[]],[[]],[[]],[5,38],[5,38],[37,20],[[37,[0,[[6,[2]],7]]],8],[[37,[0,[[6,[2]],7]],[19,[5]]],8],[[37,[0,[[6,[2]],7]],20],[[8,[20]]]],[[37,[0,[[6,[2]],7]]],[[8,[20]]]],[[37,[0,[[6,[2]],7]]],[[8,[20]]]],[[37,[0,[[6,[2]],7]]],8],[[37,[0,[[6,[2]],7]],[19,[5]]],8],[[37,21],[[8,[[12,[[0,[35,36]]]]]]]],[[37,[0,[[6,[2]],7]],20],[[8,[20]]]],[37,[[8,[11]]]],[[],13],[[],13],[[37,[0,[[6,[2]],7,22]],20],8],[[37,[0,[[6,[2]],7]],20],8],[[37,21,[0,[35,36]]],8],[[]],[[]],[[[24,[23]]],[[24,[4,23]]]],[[[24,[23]]],[[24,[4,23]]]],[25,[[25,[4]]]],[25,[[25,[4]]]],[26,[[26,[4]]]],[26,[[26,[4]]]],[38,12],[[[40,[39]]],[[8,[37]]]],[37,[[8,[[12,[[0,[35,36,22]]]]]]]],[38,29],[37,[[8,[[12,[[0,[35,36,22]]]]]]]],[[37,[0,[[6,[2]],7]],20],[[8,[20]]]],[[37,[0,[[6,[2]],7]],20],[[8,[20]]]],[37,8],[[],[[8,[37]]]],[[]],[[]],[[],29],[[],15],[[],15],[[],15],[[],15],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0],"c":[],"p":[[3,"Private"],[4,"HistoryStoreKey"],[3,"H160"],[8,"Any"],[15,"u32"],[8,"Into"],[8,"Debug"],[6,"Result"],[3,"BridgeKey"],[4,"BridgeCommand"],[15,"bool"],[4,"Option"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"ResourceId"],[3,"Range"],[15,"u64"],[15,"str"],[8,"Clone"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"TypedChainId"],[8,"IntoTypedChainId"],[3,"String"],[8,"Serializer"],[15,"u8"],[3,"Vec"],[3,"TypeId"],[3,"InMemoryStore"],[8,"Serialize"],[8,"DeserializeOwned"],[3,"SledStore"],[4,"SledQueueKey"],[3,"Path"],[8,"AsRef"],[8,"QueueStore"],[8,"LeafCacheStore"],[8,"EncryptedOutputCacheStore"],[8,"EventHashStore"],[8,"HistoryStore"],[8,"TokenPriceCacheStore"],[8,"QueueKey"],[13,"ExecuteProposalWithSignature"],[13,"TransferOwnershipWithSignature"],[13,"Block"],[13,"ResourceId"],[13,"BridgeCmd"],[13,"EvmTx"],[13,"SubstrateTx"]]},\
"webb_relayer_tx_queue":{"doc":"","t":"AA","n":["evm","substrate"],"q":[[0,"webb_relayer_tx_queue"]],"d":["EVM Transaction Queue.","Substrate Transaction Queue."],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"webb_relayer_tx_relay":{"doc":"","t":"AAAFADLLLLLLLLLLMLLLLLMFLLLLLMMLLLLLLLLFAFADLLLLLLLLLLMLLLLLFLLLLLMMLLLLLLLLF","n":["evm","substrate","fees","handle_evm_tx","vanchor","EvmFeeInfo","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","estimated_fee","fmt","from","from_mut","from_ref","from_ref","gas_price","get_evm_fee_info","init","into","into_any","into_any_arc","into_any_rc","max_refund","refund_exchange_rate","serialize","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","handle_vanchor_relay_tx","fees","handle_substrate_tx","vanchor","SubstrateFeeInfo","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","estimated_fee","fmt","from","from_mut","from_ref","from_ref","get_substrate_fee_info","init","into","into_any","into_any_arc","into_any_rc","max_refund","refund_exchange_rate","serialize","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","handle_substrate_vanchor_relay_tx"],"q":[[0,"webb_relayer_tx_relay"],[2,"webb_relayer_tx_relay::evm"],[5,"webb_relayer_tx_relay::evm::fees"],[39,"webb_relayer_tx_relay::evm::vanchor"],[40,"webb_relayer_tx_relay::substrate"],[43,"webb_relayer_tx_relay::substrate::fees"],[76,"webb_relayer_tx_relay::substrate::vanchor"]],"d":["EVM Transactional Relayer.","Substrate Transactional Relayer.","","Submits a dry-run and then submits the actual transaction ‚Ä¶","Variable Anchor transaction relayer.","Return value of fee_info API call. Contains information ‚Ä¶","","","","","","","","","","","Estimated fee for an average relay transaction, in ‚Ä¶","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Price per gas using ‚Äúnormal‚Äù confirmation speed, in ‚Ä¶","Get the current fee info.","","Calls <code>U::from(self)</code>.","","","","Maximum amount of <code>nativeToken</code> which can be exchanged to ‚Ä¶","Exchange rate for refund from <code>wrappedToken</code> to <code>nativeToken</code>","","","","","","","","","Handler for VAnchor commands","","Handles a submitted Substrate transaction by processing ‚Ä¶","Substrate Variable Anchor Transactional Relayer.","","","","","","","","","","","","Estimated fee for an average relay transaction, in ‚Ä¶","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","Maximum amount of <code>nativeToken</code> which can be exchanged to ‚Ä¶","Exchange rate for refund from <code>wrappedToken</code> to <code>nativeToken</code>","","","","","","","","","Handler for Substrate Anchor commands"],"i":[0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0],"f":[0,0,0,[[[3,[1,2]],4,5,[8,[[7,[6]]]],9],[[11,[10]]]],0,0,[12],[[],13],[[],13],[[]],[[]],[14,14],[[]],[15],[15],[15],0,[[14,16],17],[[]],[[]],[[]],[[]],0,[[18,19,20,21],[[22,[14]]]],[[],15],[[]],[[[24,[23]]],[[24,[13,23]]]],[8,[[8,[13]]]],[25,[[25,[13]]]],0,0,[[14,26],11],[[]],[[],11],[[],11],[[],27],[[]],[[]],[[]],[[21,28,4],[[11,[10]]]],0,[[[31,[29,[30,[29]]]],4,5],[[11,[10]]]],0,0,[12],[[],13],[[],13],[[]],[[]],[32,32],[[]],[15],[15],[15],0,[[32,16],17],[[]],[[]],[[]],[[]],[[5,20,21],[[22,[32]]]],[[],15],[[]],[[[24,[23]]],[[24,[13,23]]]],[8,[[8,[13]]]],[25,[[25,[13]]]],0,0,[[32,26],11],[[]],[[],11],[[],11],[[],27],[[]],[[]],[[]],[[21,33,4],[[11,[10]]]]],"c":[],"p":[[8,"Middleware"],[8,"Detokenize"],[6,"ContractCall"],[6,"CommandStream"],[15,"u64"],[3,"Metrics"],[3,"Mutex"],[3,"Arc"],[3,"ResourceId"],[4,"CommandResponse"],[4,"Result"],[3,"Private"],[8,"Any"],[3,"EvmFeeInfo"],[15,"usize"],[3,"Formatter"],[6,"Result"],[4,"TypedChainId"],[6,"Address"],[3,"U256"],[3,"RelayerContext"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Rc"],[8,"Serializer"],[3,"TypeId"],[6,"EvmVanchorCommand"],[6,"PolkadotConfig"],[3,"OnlineClient"],[3,"TxProgress"],[3,"SubstrateFeeInfo"],[6,"SubstrateVAchorCommand"]]},\
"webb_relayer_tx_relay_utils":{"doc":"","t":"DDDDLLLLLLLLMMLLLLLLLLLLLLMMMMMMMMMLLLLLLLLMMMLLLLMMMMMMMMMMMMMMMLLLLLLMLLLLLLLLLLLL","n":["AnchorRelayTransaction","ExtData","ProofData","VAnchorRelayTransaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_id","chain_id","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","encrypted_output1","encrypted_output2","ext_amount","ext_data","ext_data_hash","ext_data_hash","extension_roots","fee","fee","fmt","fmt","fmt","fmt","from","from","from","from","id","id","input_nullifiers","into","into","into","into","nullifier_hash","output_commitments","proof","proof","proof_data","public_amount","recipient","recipient","refresh_commitment","refund","refund","relayer","relayer","roots","roots","serialize","serialize","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"webb_relayer_tx_relay_utils"]],"d":["Contains data that is relayed to the Anchors","External data for the VAnchor on any chain.","Proof data object for VAnchor proofs on any chain","Contains data that is relayed to the VAnchors","","","","","","","","","one of the supported chains of this relayer","one of the supported chains of this relayer","","","","","","","","","","","","","First encrypted output commitment","Second encrypted output commitment","External amount being deposited or withdrawn withdrawn","The external data structure for arbitrary inputs","The external data hash,","External data hash consisting of arbitrary data inputs","Root extension","The relayer‚Äôs fee for the transaction","Fee to pay the relayer","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The tree id of the vanchor‚Äôs underlying tree","The tree id of the vanchor‚Äôs underlying tree","Input nullifiers to be spent","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The nullifier_hash for the proof","Output commitments to be added into the tree","The zero-knowledge proof bytes","Encoded proof","The zero-knowledge proof data structure for VAnchor ‚Ä¶","Public amount for proof","The recipient of the transaction","Recipient identifier of the withdrawn funds","The refresh commitment","The refund for the transaction in native tokens","Refund amount","The relayer of the transaction","Relayer identifier of the transaction","The target merkle root for the proof","Root set for proving membership of inputs within","","","","","","","Token address","","","","","","","","","","","",""],"i":[0,0,0,0,2,3,4,5,2,3,4,5,2,5,2,3,4,5,2,3,4,5,2,3,4,5,4,4,4,5,2,3,3,2,4,2,3,4,5,2,3,4,5,2,5,3,2,3,4,5,2,3,2,3,5,3,2,4,2,2,4,2,4,2,3,3,4,2,3,4,5,4,2,3,4,5,2,3,4,5,2,3,4,5],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[2,[1,1,1,1,1,1]]],[[2,[1,1,1,1,1,1]]]],[[[3,[1,1,1]]],[[3,[1,1,1]]]],[[[4,[1,1,1,1,1]]],[[4,[1,1,1,1,1]]]],[[[5,[1,1,1,1,1,1,1,1]]],[[5,[1,1,1,1,1,1,1,1]]]],[[]],[[]],[[]],[[]],[6,[[8,[[2,[7,7,7,7,7,7]]]]]],[6,[[8,[[3,[7,7,7]]]]]],[6,[[8,[[4,[7,7,7,7,7]]]]]],[6,[[8,[[5,[7,7,7,7,7,7,7,7]]]]]],0,0,0,0,0,0,0,0,0,[[[2,[9,9,9,9,9,9]],10],11],[[[3,[9,9,9]],10],11],[[[4,[9,9,9,9,9]],10],11],[[[5,[9,9,9,9,9,9,9,9]],10],11],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[12,12,12]],13],8],[[[4,[12,12,12,12,12]],13],8],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],14],[[],14],[[],14],[[],14]],"c":[],"p":[[8,"Clone"],[3,"AnchorRelayTransaction"],[3,"ProofData"],[3,"ExtData"],[3,"VAnchorRelayTransaction"],[8,"Deserializer"],[8,"Deserialize"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Serialize"],[8,"Serializer"],[3,"TypeId"]]},\
"webb_relayer_types":{"doc":"","t":"AAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLL","n":["etherscan_api","mnemonic","private_key","rpc_url","suri","EtherscanApiKey","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deserialize","fmt","from","from","from_mut","from_ref","into","into_any","into_any_arc","into_any_rc","serialize","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Mnemonic","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deserialize","fmt","from","from_mut","from_ref","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","PrivateKey","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deserialize","fmt","from","from","from_mut","from_ref","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","RpcUrl","__clone_box","as_any","as_any_mut","as_url","borrow","borrow_mut","clone","clone_into","deref","deserialize","fmt","fmt","from","from","from_mut","from_ref","into","into_any","into_any_arc","into_any_rc","serialize","to_owned","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","Suri","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deserialize","fmt","from","from_mut","from_ref","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"webb_relayer_types"],[5,"webb_relayer_types::etherscan_api"],[32,"webb_relayer_types::mnemonic"],[57,"webb_relayer_types::private_key"],[83,"webb_relayer_types::rpc_url"],[113,"webb_relayer_types::suri"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Mnemonic represents a mnemonic.","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","PrivateKey represents a private key.","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An RPC URL Wrapper around <code>url::Url</code> to support the <code>serde</code> ‚Ä¶","","","","Returns the inner <code>url::Url</code>.","","","","","","","","","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","<code>Substrate Uri</code>","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20],"f":[0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[3,3],[[]],[3],[4,[[5,[3]]]],[[3,6],7],[8,3],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[[3,13],5],[[]],[[],5],[[],5],[[],14],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[15,15],[[]],[15],[4,[[5,[15]]]],[[15,6],7],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[[]],[[],5],[[],5],[[],14],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[16,16],[[]],[16],[4,[[5,[16]]]],[[16,6],7],[17,16],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[[]],[[],5],[[],5],[[],14],[[]],[[]],[[]],0,[1],[[],2],[[],2],[18,19],[[]],[[]],[18,18],[[]],[18],[4,[[5,[18]]]],[[18,6],7],[[18,6],7],[[]],[19,18],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[[18,13],5],[[]],[[],8],[[],5],[[],5],[[],14],[[]],[[]],[[]],0,[1],[[],2],[[],2],[[]],[[]],[20,20],[[]],[20],[4,[[5,[20]]]],[[20,6],7],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[[]],[[],5],[[],5],[[],14],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"EtherscanApiKey"],[8,"Deserializer"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"String"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Serializer"],[3,"TypeId"],[3,"Mnemonic"],[3,"PrivateKey"],[6,"Secret"],[3,"RpcUrl"],[3,"Url"],[3,"Suri"]]},\
"webb_relayer_utils":{"doc":"","t":"NNNNNNNNNENNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNGNNNNNNNLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAALALALLLLLLLLLLLLLMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNDLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMLLLMLLLMMMMMMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNNNNNNNRNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLL","n":["ArkworksError","Axum","BridgeNotFound","BridgeNotRegistered","ChainNotFound","Config","Conversion","ConvertLeafScalarError","EllipticCurve","Error","EtherWalletError","EthersContractCall","EthersContractCallWithRetry","EthersContractCallWithRetryCloneable","EthersContractCallWithSigner","EthersContractCallWithTimeLagRetryClient","EthersContractCallWithTimeLagRetryClientCloneable","EthersProvider","EthersTimelagRetryClientClonableError","EthersTimelagRetryClientError","Etherscan","EtherscanConfigNotFound","FailedToSendResponse","FetchTokenPriceError","ForceRestart","GasOracle","Generic","Glob","GlobPattern","HandlerError","Hyper","InvalidMerkleRootError","Io","Json","Metadata","MissingSecrets","MissingValidationDetails","NodeNotFound","ParseConfig","ParseFloatError","PrometheusError","ProviderNotFound","ReadSubstrateStorageError","Reqwest","RestartRelayer","Result","ScaleCodec","Secp256k1","Sled","SledTransaction","SubxtError","TaskStoppedAbnormally","Url","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clickable_link","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_mut","from_mut","from_ref","from_ref","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_response","metric","multi_provider","probe","provide","retry","source","static_tx_payload","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","chain_id","chain_id","chain_id","token","typed_chain_id","ClickableLink","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","fmt","from","from_mut","from_ref","from_ref","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new","to_owned","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","FromUtf8Error","GatherMetricsError","Metrics","PrometheusError","ResourceMetric","__clone_box","__clone_box","account_balance_entry","anchor_update_proposals","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bridge_watcher_back_off","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","evm_transaction_queue_back_off","fmt","fmt","fmt","fmt","from","from","from","from","from","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","from_ref","gas_spent","gather_metrics","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","proposals_processed_evm_tx_queue","proposals_processed_substrate_tx_queue","proposals_processed_tx_queue","proposals_signed","provide","resource_metric_entry","source","substrate_transaction_queue_back_off","to_owned","to_owned","to_string","total_amount_of_data_stored","total_fee_earned","total_fee_earned","total_gas_spent","total_transaction_made","transaction_queue_back_off","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_into","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","unique_saturated_into","vzip","vzip","vzip","MultiProvider","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","new","request","request","to_owned","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","EncryptedOutputStore","Kind","LeavesStore","Lifecycle","MerkleTreeInsertion","PrivateTx","Retry","SignatureBridge","SigningBackend","Sync","TARGET","TxQueue","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","fmt","fmt","from","from_mut","from_ref","from_ref","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","to_owned","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","ConstantWithMaxRetryCount","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_mut","from_ref","init","into","into_any","into_any_arc","into_any_rc","new","next_backoff","reset","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","TypeErasedStaticTxPayload","__clone_box","as_any","as_any_mut","borrow","borrow_mut","call_data","call_name","clone","clone_into","deref","deref_mut","deserialize","drop","encode_call_data_to","fmt","fmt","from","from_mut","from_ref","from_ref","init","into","into_any","into_any_arc","into_any_rc","pallet_name","serialize","to_owned","to_string","try_from","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip"],"q":[[0,"webb_relayer_utils"],[141,"webb_relayer_utils::Error"],[146,"webb_relayer_utils::clickable_link"],[182,"webb_relayer_utils::metric"],[288,"webb_relayer_utils::multi_provider"],[319,"webb_relayer_utils::probe"],[365,"webb_relayer_utils::retry"],[391,"webb_relayer_utils::static_tx_payload"]],"d":["Arkworks Errors.","Error in the underlying Http/Ws server.","Bridge not configured or not enabled.","","EVM Chain not found.","Config loading error.","Ethers currency conversion error","","Elliptic Curve error.","An enum of all possible errors that could be encountered ‚Ä¶","Ether wallet errors.","Smart contract error.","Smart contract error.","Smart contract error.","Smart contract error.","Ether contract error for TimeLag provider.","Ether contract error for TimeLag provider.","Error in Http Provider (ethers client).","Ethers Timelag provider error.","Ethers Timelag provider error.","Etherscan API error","Etherscan api configuration not found.","Failed to send the response to the client.","","a backgorund task failed and force restarted.","","Generic error.","Error from Glob Iterator.","Error while iterating over a glob pattern.","Error type for HTTP handlers","HTTP Error","Invalid Merkle root","An Io error occurred.","JSON Error occurred.","Runtime metadata error.","Missing Secrets in the config, either Private key, SURI, ‚Ä¶","Missing Static Transaction Validation Details This error ‚Ä¶","Substrate node not found.","Error while parsing the config files.","Failed to convert string to float","","Provider not found error.","","Reqwest error","Restart relayer.","A type alias for the result for webb relayer, that uses ‚Ä¶","SCALE Codec error.","Secp256k1 error occurred.","Sled database error.","Sled transaction error.","Basic error for the substrate runtime.","a backgorund task failed and stopped Abnormally.","Error while parsing a URL.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Metrics functionality","Multi provider for ethers.","A module used for debugging relayer lifecycle, sync state, ‚Ä¶","","Retry functionality Retry logic for async calls","","type-erased StaticTxPayload for Substrate Transaction ‚Ä¶","","","","","","","","","","","","","","The chain id of the chain.","The chain id of the node.","The chain id of the node.","","The chain id of the bridge.","Represents a clickable link containing text and url","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","","Calls <code>U::from(self)</code>.","","","","Create a new link with a name and target URL, helpful to ‚Ä¶","","","","","","","","","","","A struct definition for collecting metrics in the relayer.","","A struct for collecting metrics for particular resource.","","","","Anchor update proposals proposed by relayer","","","","","","","","","","","","","Bridge watcher back off metric","","","","","","","","","","","","","","Evm Transaction queue backoff metric","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","Get a reference to the inner from the outer.","","Get a reference to the inner from the outer.","Gas spent metric","Gathers the whole relayer metrics","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Instantiates the various metrics and their counters, also ‚Ä¶","Proposals dequeued and executed through transaction queue","Proposals dequeued and executed through transaction queue","Proposals dequeued and executed through transaction queue","No of proposal signed by dkg/mocked","","","","Substrate Transaction queue backoff metric","","","","Total amount of data stored metric","Total fees earned on Resource.","Total fees earned metric","Total gas spent (in gwei) on Resource.","Total transaction made Relayer metric","Transaction queue backoff metric","","","","","","","","","","","","","","","","","","","MultiProvider is a JsonRpcClient that will round-robin ‚Ä¶","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Relayer Encrypted Output Store state on a specific ‚Ä¶","The Kind of the Probe.","Relayer Leaves Store state on a specific chain/node.","When the Lifecycle of the Relayer changes, like starting ‚Ä¶","When the Relayer sees a new Merkle Tree insertion event on ‚Ä¶","Relayer Private transaction state on a specific chain/node.","When the relayer will retry to do something.","Signature Bridge on a specific chain/node.","Signing Backend updates.","Relayer Sync state on a specific chain/node.","Target for logger","Relayer Transaction Queue state on a specific chain/node.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Constant with Max Retry Count is a backoff policy which ‚Ä¶","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","Calls <code>U::from(self)</code>.","","","","Creates a new Constant backoff with <code>interval</code> and ‚Ä¶","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","Get a reference to the inner from the outer.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,6,3,6,3,6,3,6,3,0,6,3,6,3,6,3,3,3,6,6,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,0,0,0,3,0,3,0,3,6,3,6,3,6,3,6,3,6,3,6,3,83,84,85,86,87,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,61,0,0,61,0,60,57,57,57,60,57,61,60,57,61,60,57,61,60,57,61,57,60,57,60,57,60,57,61,60,57,61,60,57,61,57,60,57,61,61,60,57,61,61,61,60,57,61,60,60,57,57,61,57,57,60,57,61,60,57,61,60,57,61,60,57,61,60,57,61,57,57,57,57,57,61,57,61,57,60,57,61,57,60,57,60,57,57,60,57,61,60,57,61,60,57,61,60,57,61,60,57,61,60,57,61,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,74,0,74,74,74,74,74,74,74,74,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,[2],[2],[2],[2],[2],[2],[[3,4],5],[[3,4],5],[[]],[3,6],[[[9,[[8,[7]]]]],3],[[[12,[[8,[[11,[[10,[7]]]]]]]]],3],[13,3],[14,3],[15,3],[16,3],[17,3],[18,3],[19,3],[20,3],[21,3],[22,3],[23,3],[24,3],[25,3],[26,3],[27,3],[[[28,[19]]],3],[29,3],[[[9,[[31,[[30,[[8,[[11,[[10,[7]]]]]]]]]]]]],3],[[[9,[[30,[[8,[[11,[[10,[7]]]]]]]]]]],3],[[[12,[[30,[[8,[[11,[[10,[7]]]]]]]]]]],3],[[[9,[[31,[[8,[[11,[[10,[7]]]]]]]]]]],3],[[[9,[[34,[[8,[7]],[33,[32]]]]]]],3],[35,3],[[[36,[18]]],3],[37,3],[38,3],[39,3],[[[9,[[8,[[11,[[10,[7]]]]]]]]],3],[[]],[[[41,[40]]],3],[42,3],[43,3],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[[41,[44]]],[[41,[1,44]]]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],[45,[[45,[1]]]],[6,46],0,0,0,[47],0,[3,[[48,[40]]]],0,[[],49],[[],50],[[],50],[[],50],[[],50],[[],51],[[],51],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[52],[[],1],[[],1],[[]],[[]],[53,53],[[]],[2],[2],[2],[[53,53],54],[[],54],[[],54],[[53,4],5],[[53,4],5],[[]],[[]],[[]],[[]],[[],55],[53],[[],2],[[]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],[[56,56],53],[[]],[[],49],[[],50],[[],50],[[],51],[[]],[[]],[[]],0,0,0,0,0,[52],[52],[[57,58],59],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,[60,60],[57,57],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[60,4],5],[[57,4],5],[[61,4],5],[[61,4],5],[[]],[[]],[37,61],[62,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[50,[49,61]]]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[[41,[44]]],[[41,[1,44]]]],[[[41,[44]]],[[41,[1,44]]]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],[45,[[45,[1]]]],[45,[[45,[1]]]],[[],[[50,[57,37]]]],0,0,0,0,[47],[[57,63],60],[61,[[48,[40]]]],0,[[]],[[]],[[],49],0,0,0,0,0,0,[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],51],[[],51],[[],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[52],[[],1],[[],1],[[]],[[]],[[[10,[64]]],[[10,[64]]]],[[]],[2],[2],[2],[[[10,[65]],4],5],[[]],[[]],[[]],[[]],[[],2],[[]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],[[[30,[66]]],10],[[[10,[67]],56,[0,[65,68,69,70]]],[[72,[[41,[71]]]]]],[[56,73],[[72,[[41,[71,44]]]]]],[[]],[[],50],[[],50],[[],51],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[52],[[],1],[[],1],[[]],[[]],[74,74],[[]],[2],[2],[2],[[74,74],54],[[],54],[[],54],[[74,4],5],[[74,4],5],[[]],[[]],[[]],[[]],[[],55],[74],[[],2],[[]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],[[]],[[],49],[[],50],[[],50],[[],51],[[]],[[]],[[]],0,[[],1],[[],1],[[]],[[]],[2],[2],[2],[[75,4],5],[[]],[[]],[[]],[[],2],[[]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],[[76,2],75],[75,[[48,[76]]]],[75],[[],50],[[],50],[[],51],[[]],[[]],[[]],0,[52],[[],1],[[],1],[[]],[[]],0,0,[77,77],[[]],[2],[2],[78,[[50,[77]]]],[2],[[77,79,66],[[50,[26]]]],[[77,4],5],[[77,4],5],[[]],[[]],[[]],[[]],[[],2],[[]],[[[41,[44]]],[[41,[1,44]]]],[30,[[30,[1]]]],[45,[[45,[1]]]],0,[[77,80],50],[[]],[[],49],[[],50],[[[82,[81]]],[[50,[77]]]],[[],50],[[],51],[[]],[[]],[[]]],"c":[],"p":[[8,"Any"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"HandlerError"],[3,"Provider"],[3,"Provider"],[4,"ContractError"],[3,"MultiProvider"],[3,"RetryClient"],[4,"TimeLagError"],[4,"ParseError"],[4,"WalletError"],[4,"MetadataError"],[4,"GasOracleError"],[3,"Error"],[3,"Error"],[4,"ConfigError"],[3,"Error"],[4,"ConversionError"],[4,"ProviderError"],[3,"GlobError"],[4,"EtherscanError"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"Error"],[3,"PatternError"],[3,"Arc"],[3,"TimeLag"],[6,"SigningKey"],[3,"Wallet"],[3,"SignerMiddleware"],[4,"Error"],[4,"TransactionError"],[4,"Error"],[3,"ParseFloatError"],[4,"Error"],[8,"Error"],[3,"Box"],[3,"Error"],[3,"Error"],[3,"Global"],[3,"Rc"],[6,"Response"],[3,"Demand"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Private"],[3,"ClickableLink"],[15,"bool"],[15,"u64"],[15,"str"],[3,"Metrics"],[4,"TypedChainId"],[3,"GenericGauge"],[3,"ResourceMetric"],[4,"GatherMetricsError"],[3,"FromUtf8Error"],[3,"ResourceId"],[8,"Clone"],[8,"Debug"],[3,"Vec"],[8,"JsonRpcClient"],[8,"Serialize"],[8,"Send"],[8,"Sync"],[8,"Future"],[3,"Pin"],[4,"QuorumParams"],[4,"Kind"],[3,"ConstantWithMaxRetryCount"],[3,"Duration"],[3,"TypeErasedStaticTxPayload"],[8,"Deserializer"],[3,"Metadata"],[8,"Serializer"],[8,"Encode"],[3,"StaticTxPayload"],[13,"ChainNotFound"],[13,"NodeNotFound"],[13,"EtherscanConfigNotFound"],[13,"FetchTokenPriceError"],[13,"BridgeNotFound"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
